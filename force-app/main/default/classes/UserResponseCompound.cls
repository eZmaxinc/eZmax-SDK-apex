/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A User Object and children to create a complete structure
 */
public class UserResponseCompound implements UserResponse {
    /**
     * The unique ID of the User
     * minimum: 0
     * @return pkiUserID
     */
    public Integer pkiUserID { get; set; }

    /**
     * The unique ID of the Agent.
     * minimum: 0
     * @return fkiAgentID
     */
    public Integer fkiAgentID { get; set; }

    /**
     * The unique ID of the Broker.
     * minimum: 0
     * @return fkiBrokerID
     */
    public Integer fkiBrokerID { get; set; }

    /**
     * The unique ID of the Assistant.
     * minimum: 0
     * @return fkiAssistantID
     */
    public Integer fkiAssistantID { get; set; }

    /**
     * The unique ID of the Employee.
     * minimum: 0
     * @return fkiEmployeeID
     */
    public Integer fkiEmployeeID { get; set; }

    /**
     * The unique ID of the Company
     * minimum: 1
     * maximum: 255
     * @return fkiCompanyIDDefault
     */
    public Integer fkiCompanyIDDefault { get; set; }

    /**
     * The Name of the Company in the language of the requester
     * @return sCompanyNameX
     */
    public String sCompanyNameX { get; set; }

    /**
     * The unique ID of the Department
     * minimum: 0
     * @return fkiDepartmentIDDefault
     */
    public Integer fkiDepartmentIDDefault { get; set; }

    /**
     * The Name of the Department in the language of the requester
     * @return sDepartmentNameX
     */
    public String sDepartmentNameX { get; set; }

    /**
     * The unique ID of the Timezone
     * minimum: 0
     * @return fkiTimezoneID
     */
    public Integer fkiTimezoneID { get; set; }

    /**
     * The description of the Timezone
     * @return sTimezoneName
     */
    public String sTimezoneName { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The Name of the Language in the language of the requester
     * @return sLanguageNameX
     */
    public String sLanguageNameX { get; set; }

    /**
     * Get objEmail
     * @return objEmail
     */
    public EmailResponseCompound objEmail { get; set; }

    /**
     * The unique ID of the Billingentityinternal.
     * minimum: 0
     * @return fkiBillingentityinternalID
     */
    public Integer fkiBillingentityinternalID { get; set; }

    /**
     * The description of the Billingentityinternal in the language of the requester
     * @return sBillingentityinternalDescriptionX
     */
    public String sBillingentityinternalDescriptionX { get; set; }

    /**
     * Get objPhoneHome
     * @return objPhoneHome
     */
    public PhoneResponseCompound objPhoneHome { get; set; }

    /**
     * Get objPhoneSMS
     * @return objPhoneSMS
     */
    public PhoneResponseCompound objPhoneSMS { get; set; }

    /**
     * The unique ID of the Secretquestion.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|The name of the hospital in which you were born|\n|2|The name of your grade school|\n|3|The last name of your favorite teacher|\n|4|Your favorite sports team|\n|5|Your favorite TV show|\n|6|Your favorite movie|\n|7|The name of the street on which you grew up|\n|8|The name of your first employer|\n|9|Your first car|\n|10|Your favorite food|\n|11|The name of your first pet|\n|12|Favorite musician/band|\n|13|What instrument you play|\n|14|Your father\'s middle name|\n|15|Your mother\'s maiden name|\n|16|Name of your eldest child|\n|17|Your spouse\'s middle name|\n|18|Favorite restaurant|\n|19|Childhood nickname|\n|20|Favorite vacation destination|\n|21|Your boat\'s name|\n|22|Date of Birth (YYYY-MM-DD)|
     * minimum: 0
     * @return fkiSecretquestionID
     */
    public Integer fkiSecretquestionID { get; set; }

    /**
     * The unique ID of the Module
     * minimum: 0
     * @return fkiModuleIDForm
     */
    public Integer fkiModuleIDForm { get; set; }

    /**
     * The Name of the Module in the language of the requester
     * @return sModuleNameX
     */
    public String sModuleNameX { get; set; }

    /**
     * Get eUserOrigin
     * @return eUserOrigin
     */
    public FieldEUserOrigin eUserOrigin { get; set; }

    /**
     * Get eUserType
     * @return eUserType
     */
    public FieldEUserType eUserType { get; set; }

    /**
     * Get eUserLogintype
     * @return eUserLogintype
     */
    public FieldEUserLogintype eUserLogintype { get; set; }

    /**
     * The first name of the user
     * @return sUserFirstname
     */
    public String sUserFirstname { get; set; }

    /**
     * The last name of the user
     * @return sUserLastname
     */
    public String sUserLastname { get; set; }

    /**
     * The login name of the User.
     * @return sUserLoginname
     */
    public String sUserLoginname { get; set; }

    /**
     * Get eUserEzsignaccess
     * @return eUserEzsignaccess
     */
    public FieldEUserEzsignaccess eUserEzsignaccess { get; set; }

    /**
     * The last logon date of the User
     * @return dtUserLastlogondate
     */
    public String dtUserLastlogondate { get; set; }

    /**
     * The date at which the User\'s password was last changed
     * @return dtUserPasswordchanged
     */
    public String dtUserPasswordchanged { get; set; }

    /**
     * The eZsign prepaid expiration date
     * @return dtUserEzsignprepaidexpiration
     */
    public String dtUserEzsignprepaidexpiration { get; set; }

    /**
     * Whether the User is active or not
     * @return bUserIsactive
     */
    public Boolean bUserIsactive { get; set; }

    /**
     * Whether if the transactions in which the User is implicated must be validated by administrative personnel or not
     * @return bUserValidatebyadministration
     */
    public Boolean bUserValidatebyadministration { get; set; }

    /**
     * Whether if the transactions in which the User is implicated must be validated by a director or not
     * @return bUserValidatebydirector
     */
    public Boolean bUserValidatebydirector { get; set; }

    /**
     * Whether if Attachments uploaded by the User must be validated or not
     * @return bUserAttachmentautoverified
     */
    public Boolean bUserAttachmentautoverified { get; set; }

    /**
     * Whether if the User is forced to change its password
     * @return bUserChangepassword
     */
    public Boolean bUserChangepassword { get; set; }

    /**
     * Get objAudit
     * @return objAudit
     */
    public CommonAudit objAudit { get; set; }

    public static UserResponseCompound getExample() {
        UserResponseCompound userResponseCompound = new UserResponseCompound();
          userResponseCompound.pkiUserID = 70;
          userResponseCompound.fkiAgentID = 1;
          userResponseCompound.fkiBrokerID = 26;
          userResponseCompound.fkiAssistantID = 1;
          userResponseCompound.fkiEmployeeID = 31;
          userResponseCompound.fkiCompanyIDDefault = 1;
          userResponseCompound.sCompanyNameX = 'Acme inc.';
          userResponseCompound.fkiDepartmentIDDefault = 21;
          userResponseCompound.sDepartmentNameX = 'Head Office';
          userResponseCompound.fkiTimezoneID = 247;
          userResponseCompound.sTimezoneName = 'Default';
          userResponseCompound.fkiLanguageID = 2;
          userResponseCompound.sLanguageNameX = 'English';
          userResponseCompound.objEmail = EmailResponseCompound.getExample();
          userResponseCompound.fkiBillingentityinternalID = 1;
          userResponseCompound.sBillingentityinternalDescriptionX = 'Default';
          userResponseCompound.objPhoneHome = PhoneResponseCompound.getExample();
          userResponseCompound.objPhoneSMS = PhoneResponseCompound.getExample();
          userResponseCompound.fkiSecretquestionID = 7;
          userResponseCompound.fkiModuleIDForm = 40;
          userResponseCompound.sModuleNameX = 'Purchase';
          userResponseCompound.eUserOrigin = FieldEUserOrigin.getExample();
          userResponseCompound.eUserType = FieldEUserType.getExample();
          userResponseCompound.eUserLogintype = FieldEUserLogintype.getExample();
          userResponseCompound.sUserFirstname = 'John';
          userResponseCompound.sUserLastname = 'Doe';
          userResponseCompound.sUserLoginname = 'JohnDoe';
          userResponseCompound.eUserEzsignaccess = FieldEUserEzsignaccess.getExample();
          userResponseCompound.dtUserLastlogondate = '2020-12-31 23:59:59';
          userResponseCompound.dtUserPasswordchanged = '2020-12-31 23:59:59';
          userResponseCompound.dtUserEzsignprepaidexpiration = '2020-12-31';
          userResponseCompound.bUserIsactive = true;
          userResponseCompound.bUserValidatebyadministration = false;
          userResponseCompound.bUserValidatebydirector = false;
          userResponseCompound.bUserAttachmentautoverified = true;
          userResponseCompound.bUserChangepassword = true;
          userResponseCompound.objAudit = CommonAudit.getExample();
        return userResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof UserResponseCompound) {           
            UserResponseCompound userResponseCompound = (UserResponseCompound) obj;
            return this.pkiUserID == userResponseCompound.pkiUserID
                && this.fkiAgentID == userResponseCompound.fkiAgentID
                && this.fkiBrokerID == userResponseCompound.fkiBrokerID
                && this.fkiAssistantID == userResponseCompound.fkiAssistantID
                && this.fkiEmployeeID == userResponseCompound.fkiEmployeeID
                && this.fkiCompanyIDDefault == userResponseCompound.fkiCompanyIDDefault
                && this.sCompanyNameX == userResponseCompound.sCompanyNameX
                && this.fkiDepartmentIDDefault == userResponseCompound.fkiDepartmentIDDefault
                && this.sDepartmentNameX == userResponseCompound.sDepartmentNameX
                && this.fkiTimezoneID == userResponseCompound.fkiTimezoneID
                && this.sTimezoneName == userResponseCompound.sTimezoneName
                && this.fkiLanguageID == userResponseCompound.fkiLanguageID
                && this.sLanguageNameX == userResponseCompound.sLanguageNameX
                && this.objEmail == userResponseCompound.objEmail
                && this.fkiBillingentityinternalID == userResponseCompound.fkiBillingentityinternalID
                && this.sBillingentityinternalDescriptionX == userResponseCompound.sBillingentityinternalDescriptionX
                && this.objPhoneHome == userResponseCompound.objPhoneHome
                && this.objPhoneSMS == userResponseCompound.objPhoneSMS
                && this.fkiSecretquestionID == userResponseCompound.fkiSecretquestionID
                && this.fkiModuleIDForm == userResponseCompound.fkiModuleIDForm
                && this.sModuleNameX == userResponseCompound.sModuleNameX
                && this.eUserOrigin == userResponseCompound.eUserOrigin
                && this.eUserType == userResponseCompound.eUserType
                && this.eUserLogintype == userResponseCompound.eUserLogintype
                && this.sUserFirstname == userResponseCompound.sUserFirstname
                && this.sUserLastname == userResponseCompound.sUserLastname
                && this.sUserLoginname == userResponseCompound.sUserLoginname
                && this.eUserEzsignaccess == userResponseCompound.eUserEzsignaccess
                && this.dtUserLastlogondate == userResponseCompound.dtUserLastlogondate
                && this.dtUserPasswordchanged == userResponseCompound.dtUserPasswordchanged
                && this.dtUserEzsignprepaidexpiration == userResponseCompound.dtUserEzsignprepaidexpiration
                && this.bUserIsactive == userResponseCompound.bUserIsactive
                && this.bUserValidatebyadministration == userResponseCompound.bUserValidatebyadministration
                && this.bUserValidatebydirector == userResponseCompound.bUserValidatebydirector
                && this.bUserAttachmentautoverified == userResponseCompound.bUserAttachmentautoverified
                && this.bUserChangepassword == userResponseCompound.bUserChangepassword
                && this.objAudit == userResponseCompound.objAudit;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiUserID == null ? 0 : System.hashCode(pkiUserID));
        hashCode = (17 * hashCode) + (fkiAgentID == null ? 0 : System.hashCode(fkiAgentID));
        hashCode = (17 * hashCode) + (fkiBrokerID == null ? 0 : System.hashCode(fkiBrokerID));
        hashCode = (17 * hashCode) + (fkiAssistantID == null ? 0 : System.hashCode(fkiAssistantID));
        hashCode = (17 * hashCode) + (fkiEmployeeID == null ? 0 : System.hashCode(fkiEmployeeID));
        hashCode = (17 * hashCode) + (fkiCompanyIDDefault == null ? 0 : System.hashCode(fkiCompanyIDDefault));
        hashCode = (17 * hashCode) + (sCompanyNameX == null ? 0 : System.hashCode(sCompanyNameX));
        hashCode = (17 * hashCode) + (fkiDepartmentIDDefault == null ? 0 : System.hashCode(fkiDepartmentIDDefault));
        hashCode = (17 * hashCode) + (sDepartmentNameX == null ? 0 : System.hashCode(sDepartmentNameX));
        hashCode = (17 * hashCode) + (fkiTimezoneID == null ? 0 : System.hashCode(fkiTimezoneID));
        hashCode = (17 * hashCode) + (sTimezoneName == null ? 0 : System.hashCode(sTimezoneName));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sLanguageNameX == null ? 0 : System.hashCode(sLanguageNameX));
        hashCode = (17 * hashCode) + (objEmail == null ? 0 : System.hashCode(objEmail));
        hashCode = (17 * hashCode) + (fkiBillingentityinternalID == null ? 0 : System.hashCode(fkiBillingentityinternalID));
        hashCode = (17 * hashCode) + (sBillingentityinternalDescriptionX == null ? 0 : System.hashCode(sBillingentityinternalDescriptionX));
        hashCode = (17 * hashCode) + (objPhoneHome == null ? 0 : System.hashCode(objPhoneHome));
        hashCode = (17 * hashCode) + (objPhoneSMS == null ? 0 : System.hashCode(objPhoneSMS));
        hashCode = (17 * hashCode) + (fkiSecretquestionID == null ? 0 : System.hashCode(fkiSecretquestionID));
        hashCode = (17 * hashCode) + (fkiModuleIDForm == null ? 0 : System.hashCode(fkiModuleIDForm));
        hashCode = (17 * hashCode) + (sModuleNameX == null ? 0 : System.hashCode(sModuleNameX));
        hashCode = (17 * hashCode) + (eUserOrigin == null ? 0 : System.hashCode(eUserOrigin));
        hashCode = (17 * hashCode) + (eUserType == null ? 0 : System.hashCode(eUserType));
        hashCode = (17 * hashCode) + (eUserLogintype == null ? 0 : System.hashCode(eUserLogintype));
        hashCode = (17 * hashCode) + (sUserFirstname == null ? 0 : System.hashCode(sUserFirstname));
        hashCode = (17 * hashCode) + (sUserLastname == null ? 0 : System.hashCode(sUserLastname));
        hashCode = (17 * hashCode) + (sUserLoginname == null ? 0 : System.hashCode(sUserLoginname));
        hashCode = (17 * hashCode) + (eUserEzsignaccess == null ? 0 : System.hashCode(eUserEzsignaccess));
        hashCode = (17 * hashCode) + (dtUserLastlogondate == null ? 0 : System.hashCode(dtUserLastlogondate));
        hashCode = (17 * hashCode) + (dtUserPasswordchanged == null ? 0 : System.hashCode(dtUserPasswordchanged));
        hashCode = (17 * hashCode) + (dtUserEzsignprepaidexpiration == null ? 0 : System.hashCode(dtUserEzsignprepaidexpiration));
        hashCode = (17 * hashCode) + (bUserIsactive == null ? 0 : System.hashCode(bUserIsactive));
        hashCode = (17 * hashCode) + (bUserValidatebyadministration == null ? 0 : System.hashCode(bUserValidatebyadministration));
        hashCode = (17 * hashCode) + (bUserValidatebydirector == null ? 0 : System.hashCode(bUserValidatebydirector));
        hashCode = (17 * hashCode) + (bUserAttachmentautoverified == null ? 0 : System.hashCode(bUserAttachmentautoverified));
        hashCode = (17 * hashCode) + (bUserChangepassword == null ? 0 : System.hashCode(bUserChangepassword));
        hashCode = (17 * hashCode) + (objAudit == null ? 0 : System.hashCode(objAudit));
        return hashCode;
    }
}

