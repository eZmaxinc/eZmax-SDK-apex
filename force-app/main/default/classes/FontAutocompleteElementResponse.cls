/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Font AutocompleteElement Response
 */
public class FontAutocompleteElementResponse {
    /**
     * The name of the Font
     * @return sFontName
     */
    public String sFontName { get; set; }

    /**
     * The unique ID of the Font
     * minimum: 0
     * @return pkiFontID
     */
    public Integer pkiFontID { get; set; }

    /**
     * Whether the Font is active or not
     * @return bFontIsactive
     */
    public Boolean bFontIsactive { get; set; }

    public static FontAutocompleteElementResponse getExample() {
        FontAutocompleteElementResponse fontAutocompleteElementResponse = new FontAutocompleteElementResponse();
          fontAutocompleteElementResponse.sFontName = 'Arial';
          fontAutocompleteElementResponse.pkiFontID = 1;
          fontAutocompleteElementResponse.bFontIsactive = true;
        return fontAutocompleteElementResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof FontAutocompleteElementResponse) {           
            FontAutocompleteElementResponse fontAutocompleteElementResponse = (FontAutocompleteElementResponse) obj;
            return this.sFontName == fontAutocompleteElementResponse.sFontName
                && this.pkiFontID == fontAutocompleteElementResponse.pkiFontID
                && this.bFontIsactive == fontAutocompleteElementResponse.bFontIsactive;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (sFontName == null ? 0 : System.hashCode(sFontName));
        hashCode = (17 * hashCode) + (pkiFontID == null ? 0 : System.hashCode(pkiFontID));
        hashCode = (17 * hashCode) + (bFontIsactive == null ? 0 : System.hashCode(bFontIsactive));
        return hashCode;
    }
}

