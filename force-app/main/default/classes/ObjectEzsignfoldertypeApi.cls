/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectEzsignfoldertypeApi {
    Client client;

    public ObjectEzsignfoldertypeApi(Client client) {
        this.client = client;
    }

    public ObjectEzsignfoldertypeApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Ezsignfoldertype
     * The endpoint allows to create one or many elements at once.
     * @param ezsignfoldertypeCreateObjectV1Reques  (required)
     * @return EzsignfoldertypeCreateObjectV1Respon
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldertypeCreateObjectV1Respon ezsignfoldertypeCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsignfoldertypeCreateObjectV1Reques'), 'ezsignfoldertypeCreateObjectV1Reques');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldertypeCreateObjectV1Respon) client.invoke(
            'POST', '/1/object/ezsignfoldertype',
            (EzsignfoldertypeCreateObjectV1Reques) params.get('ezsignfoldertypeCreateObjectV1Reques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldertypeCreateObjectV1Respon.class
        );
    }
    /**
     * Edit an existing Ezsignfoldertype
     * 
     * @param pkiEzsignfoldertypeID  (required)
     * @param ezsignfoldertypeEditObjectV1Request  (required)
     * @return EzsignfoldertypeEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldertypeEditObjectV1Response ezsignfoldertypeEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldertypeID'), 'pkiEzsignfoldertypeID');
        client.assertNotNull(params.get('ezsignfoldertypeEditObjectV1Request'), 'ezsignfoldertypeEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldertypeEditObjectV1Response) client.invoke(
            'PUT', '/1/object/ezsignfoldertype/{pkiEzsignfoldertypeID}',
            (EzsignfoldertypeEditObjectV1Request) params.get('ezsignfoldertypeEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldertypeID' => (Integer) params.get('pkiEzsignfoldertypeID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldertypeEditObjectV1Response.class
        );
    }
    /**
     * Retrieve Ezsignfoldertypes and IDs
     * Get the list of Ezsignfoldertypes to be used in a dropdown or autocomplete control.
     * @param sSelector The type of Ezsignfoldertypes to return (required)
     * @param eFilterActive Specify which results we want to display. (optional, default to Active)
     * @param sQuery Allow to filter the returned results (optional)
     * @param acceptLanguage  (optional)
     * @return CommonGetAutocompleteV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public CommonGetAutocompleteV1Response ezsignfoldertypeGetAutocompleteV1(Map<String, Object> params) {
        client.assertNotNull(params.get('sSelector'), 'sSelector');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eFilterActive', (String) params.get('eFilterActive')));
        query.addAll(client.makeParam('sQuery', (String) params.get('sQuery')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (CommonGetAutocompleteV1Response) client.invoke(
            'GET', '/1/object/ezsignfoldertype/getAutocomplete/{sSelector}', '',
            query, form,
            new Map<String, Object>{
                'sSelector' => (String) params.get('sSelector')
            },
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            CommonGetAutocompleteV1Response.class
        );
    }
    /**
     * Retrieve Ezsignfoldertypes and IDs
     * Get the list of Ezsignfoldertype to be used in a dropdown or autocomplete control.
     * @param sSelector The type of Ezsignfoldertypes to return (required)
     * @param eFilterActive Specify which results we want to display. (optional, default to Active)
     * @param sQuery Allow to filter the returned results (optional)
     * @param acceptLanguage  (optional)
     * @return EzsignfoldertypeGetAutocompleteV2Res
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldertypeGetAutocompleteV2Res ezsignfoldertypeGetAutocompleteV2(Map<String, Object> params) {
        client.assertNotNull(params.get('sSelector'), 'sSelector');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eFilterActive', (String) params.get('eFilterActive')));
        query.addAll(client.makeParam('sQuery', (String) params.get('sQuery')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldertypeGetAutocompleteV2Res) client.invoke(
            'GET', '/2/object/ezsignfoldertype/getAutocomplete/{sSelector}', '',
            query, form,
            new Map<String, Object>{
                'sSelector' => (String) params.get('sSelector')
            },
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldertypeGetAutocompleteV2Res.class
        );
    }
    /**
     * Retrieve Ezsignfoldertype list
     * Enum values that can be filtered in query parameter *sFilter*:\n\n| Variable | Valid values |\n|---|---|\n| eEzsignfoldertypePrivacylevel | User&lt;br&gt;Usergroup |
     * @param eOrderBy Specify how you want the results to be sorted (optional)
     * @param iRowMax  (optional, default to 10000)
     * @param iRowOffset  (optional, default to 0)
     * @param acceptLanguage  (optional)
     * @param sFilter  (optional)
     * @return EzsignfoldertypeGetListV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldertypeGetListV1Response ezsignfoldertypeGetListV1(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eOrderBy', (String) params.get('eOrderBy')));
        query.addAll(client.makeParam('iRowMax', (Integer) params.get('iRowMax')));
        query.addAll(client.makeParam('iRowOffset', (Integer) params.get('iRowOffset')));
        query.addAll(client.makeParam('sFilter', (String) params.get('sFilter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldertypeGetListV1Response) client.invoke(
            'GET', '/1/object/ezsignfoldertype/getList', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldertypeGetListV1Response.class
        );
    }
    /**
     * Retrieve an existing Ezsignfoldertype
     * 
     * @param pkiEzsignfoldertypeID  (required)
     * @return EzsignfoldertypeGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldertypeGetObjectV2Response ezsignfoldertypeGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldertypeID'), 'pkiEzsignfoldertypeID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldertypeGetObjectV2Response) client.invoke(
            'GET', '/2/object/ezsignfoldertype/{pkiEzsignfoldertypeID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldertypeID' => (Integer) params.get('pkiEzsignfoldertypeID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldertypeGetObjectV2Response.class
        );
    }
}
