/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.11
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An Ezsignformfieldgroup Object
 */
public class OASEzsignformfieldgroupRequest {
    /**
     * The unique ID of the Ezsignformfieldgroup
     * minimum: 0
     * @return pkiEzsignformfieldgroupID
     */
    public Integer pkiEzsignformfieldgroupID { get; set; }

    /**
     * The unique ID of the Ezsigndocument
     * minimum: 0
     * @return fkiEzsigndocumentID
     */
    public Integer fkiEzsigndocumentID { get; set; }

    /**
     * Get eEzsignformfieldgroupType
     * @return eEzsignformfieldgroupType
     */
    public OASFieldEEzsignformfieldgroupType eEzsignformfieldgroupType { get; set; }

    /**
     * Get eEzsignformfieldgroupSignerrequirement
     * @return eEzsignformfieldgroupSignerrequirement
     */
    public OASFieldEEzsignformfieldgroupSignerr eEzsignformfieldgroupSignerrequirement { get; set; }

    /**
     * The Label for the Ezsignformfieldgroup
     * @return sEzsignformfieldgroupLabel
     */
    public String sEzsignformfieldgroupLabel { get; set; }

    /**
     * The step when the Ezsignsigner will be invited to fill the form fields
     * minimum: 1
     * @return iEzsignformfieldgroupStep
     */
    public Integer iEzsignformfieldgroupStep { get; set; }

    /**
     * The default value for the Ezsignformfieldgroup
     * @return sEzsignformfieldgroupDefaultvalue
     */
    public String sEzsignformfieldgroupDefaultvalue { get; set; }

    /**
     * The minimum number of Ezsignformfield that must be filled in the Ezsignformfieldgroup
     * minimum: 0
     * @return iEzsignformfieldgroupFilledmin
     */
    public Integer iEzsignformfieldgroupFilledmin { get; set; }

    /**
     * The maximum number of Ezsignformfield that must be filled in the Ezsignformfieldgroup
     * minimum: 0
     * @return iEzsignformfieldgroupFilledmax
     */
    public Integer iEzsignformfieldgroupFilledmax { get; set; }

    /**
     * Whether the Ezsignformfieldgroup is read only or not.
     * @return bEzsignformfieldgroupReadonly
     */
    public Boolean bEzsignformfieldgroupReadonly { get; set; }

    /**
     * The maximum length for the value in the Ezsignformfieldgroup\n\nThis can only be set if eEzsignformfieldgroupType is **Text** or **Textarea**
     * minimum: 0
     * @return iEzsignformfieldgroupMaxlength
     */
    public Integer iEzsignformfieldgroupMaxlength { get; set; }

    /**
     * Whether the Ezsignformfieldgroup is encrypted in the database or not. Encrypted values are not displayed on the Ezsigndocument.\nThis can only be set if eEzsignformfieldgroupType is **Text** or **Textarea**
     * @return bEzsignformfieldgroupEncrypted
     */
    public Boolean bEzsignformfieldgroupEncrypted { get; set; }

    /**
     * A regular expression to indicate what values are acceptable for the Ezsignformfieldgroup.\n\nThis can only be set if eEzsignformfieldgroupType is **Text** or **Textarea**
     * @return sEzsignformfieldgroupRegexp
     */
    public String sEzsignformfieldgroupRegexp { get; set; }

    /**
     * A tooltip that will be presented to Ezsignsigner about the Ezsignformfieldgroup
     * @return tEzsignformfieldgroupTooltip
     */
    public String tEzsignformfieldgroupTooltip { get; set; }

    /**
     * Get eEzsignformfieldgroupTooltipposition
     * @return eEzsignformfieldgroupTooltipposition
     */
    public OASFieldEEzsignformfieldgroupTooltip eEzsignformfieldgroupTooltipposition { get; set; }

    public static OASEzsignformfieldgroupRequest getExample() {
        OASEzsignformfieldgroupRequest ezsignformfieldgroupRequest = new OASEzsignformfieldgroupRequest();
          ezsignformfieldgroupRequest.pkiEzsignformfieldgroupID = 26;
          ezsignformfieldgroupRequest.fkiEzsigndocumentID = 97;
          ezsignformfieldgroupRequest.eEzsignformfieldgroupType = OASFieldEEzsignformfieldgroupType.getExample();
          ezsignformfieldgroupRequest.eEzsignformfieldgroupSignerrequirement = OASFieldEEzsignformfieldgroupSignerr.getExample();
          ezsignformfieldgroupRequest.sEzsignformfieldgroupLabel = 'Allergies';
          ezsignformfieldgroupRequest.iEzsignformfieldgroupStep = 1;
          ezsignformfieldgroupRequest.sEzsignformfieldgroupDefaultvalue = 'Foo';
          ezsignformfieldgroupRequest.iEzsignformfieldgroupFilledmin = 1;
          ezsignformfieldgroupRequest.iEzsignformfieldgroupFilledmax = 2;
          ezsignformfieldgroupRequest.bEzsignformfieldgroupReadonly = true;
          ezsignformfieldgroupRequest.iEzsignformfieldgroupMaxlength = 75;
          ezsignformfieldgroupRequest.bEzsignformfieldgroupEncrypted = true;
          ezsignformfieldgroupRequest.sEzsignformfieldgroupRegexp = '/[-0-9a-zA-Z.+_]+@[-0-9a-zA-Z.+_]+.[a-zA-Z]{2,4}/';
          ezsignformfieldgroupRequest.tEzsignformfieldgroupTooltip = 'Please enter a valid email address';
          ezsignformfieldgroupRequest.eEzsignformfieldgroupTooltipposition = OASFieldEEzsignformfieldgroupTooltip.getExample();
        return ezsignformfieldgroupRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignformfieldgroupRequest) {           
            OASEzsignformfieldgroupRequest ezsignformfieldgroupRequest = (OASEzsignformfieldgroupRequest) obj;
            return this.pkiEzsignformfieldgroupID == ezsignformfieldgroupRequest.pkiEzsignformfieldgroupID
                && this.fkiEzsigndocumentID == ezsignformfieldgroupRequest.fkiEzsigndocumentID
                && this.eEzsignformfieldgroupType == ezsignformfieldgroupRequest.eEzsignformfieldgroupType
                && this.eEzsignformfieldgroupSignerrequirement == ezsignformfieldgroupRequest.eEzsignformfieldgroupSignerrequirement
                && this.sEzsignformfieldgroupLabel == ezsignformfieldgroupRequest.sEzsignformfieldgroupLabel
                && this.iEzsignformfieldgroupStep == ezsignformfieldgroupRequest.iEzsignformfieldgroupStep
                && this.sEzsignformfieldgroupDefaultvalue == ezsignformfieldgroupRequest.sEzsignformfieldgroupDefaultvalue
                && this.iEzsignformfieldgroupFilledmin == ezsignformfieldgroupRequest.iEzsignformfieldgroupFilledmin
                && this.iEzsignformfieldgroupFilledmax == ezsignformfieldgroupRequest.iEzsignformfieldgroupFilledmax
                && this.bEzsignformfieldgroupReadonly == ezsignformfieldgroupRequest.bEzsignformfieldgroupReadonly
                && this.iEzsignformfieldgroupMaxlength == ezsignformfieldgroupRequest.iEzsignformfieldgroupMaxlength
                && this.bEzsignformfieldgroupEncrypted == ezsignformfieldgroupRequest.bEzsignformfieldgroupEncrypted
                && this.sEzsignformfieldgroupRegexp == ezsignformfieldgroupRequest.sEzsignformfieldgroupRegexp
                && this.tEzsignformfieldgroupTooltip == ezsignformfieldgroupRequest.tEzsignformfieldgroupTooltip
                && this.eEzsignformfieldgroupTooltipposition == ezsignformfieldgroupRequest.eEzsignformfieldgroupTooltipposition;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsignformfieldgroupID == null ? 0 : System.hashCode(pkiEzsignformfieldgroupID));
        hashCode = (17 * hashCode) + (fkiEzsigndocumentID == null ? 0 : System.hashCode(fkiEzsigndocumentID));
        hashCode = (17 * hashCode) + (eEzsignformfieldgroupType == null ? 0 : System.hashCode(eEzsignformfieldgroupType));
        hashCode = (17 * hashCode) + (eEzsignformfieldgroupSignerrequirement == null ? 0 : System.hashCode(eEzsignformfieldgroupSignerrequirement));
        hashCode = (17 * hashCode) + (sEzsignformfieldgroupLabel == null ? 0 : System.hashCode(sEzsignformfieldgroupLabel));
        hashCode = (17 * hashCode) + (iEzsignformfieldgroupStep == null ? 0 : System.hashCode(iEzsignformfieldgroupStep));
        hashCode = (17 * hashCode) + (sEzsignformfieldgroupDefaultvalue == null ? 0 : System.hashCode(sEzsignformfieldgroupDefaultvalue));
        hashCode = (17 * hashCode) + (iEzsignformfieldgroupFilledmin == null ? 0 : System.hashCode(iEzsignformfieldgroupFilledmin));
        hashCode = (17 * hashCode) + (iEzsignformfieldgroupFilledmax == null ? 0 : System.hashCode(iEzsignformfieldgroupFilledmax));
        hashCode = (17 * hashCode) + (bEzsignformfieldgroupReadonly == null ? 0 : System.hashCode(bEzsignformfieldgroupReadonly));
        hashCode = (17 * hashCode) + (iEzsignformfieldgroupMaxlength == null ? 0 : System.hashCode(iEzsignformfieldgroupMaxlength));
        hashCode = (17 * hashCode) + (bEzsignformfieldgroupEncrypted == null ? 0 : System.hashCode(bEzsignformfieldgroupEncrypted));
        hashCode = (17 * hashCode) + (sEzsignformfieldgroupRegexp == null ? 0 : System.hashCode(sEzsignformfieldgroupRegexp));
        hashCode = (17 * hashCode) + (tEzsignformfieldgroupTooltip == null ? 0 : System.hashCode(tEzsignformfieldgroupTooltip));
        hashCode = (17 * hashCode) + (eEzsignformfieldgroupTooltipposition == null ? 0 : System.hashCode(eEzsignformfieldgroupTooltipposition));
        return hashCode;
    }
}

