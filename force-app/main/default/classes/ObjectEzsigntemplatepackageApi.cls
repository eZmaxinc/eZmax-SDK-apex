/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectEzsigntemplatepackageApi {
    Client client;

    public ObjectEzsigntemplatepackageApi(Client client) {
        this.client = client;
    }

    public ObjectEzsigntemplatepackageApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Ezsigntemplatepackage
     * The endpoint allows to create one or many elements at once.
     * @param ezsigntemplatepackageCreateObjectV1R  (required)
     * @return EzsigntemplatepackageCreateObjectV1R
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageCreateObjectV1R ezsigntemplatepackageCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsigntemplatepackageCreateObjectV1R'), 'ezsigntemplatepackageCreateObjectV1R');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageCreateObjectV1R) client.invoke(
            'POST', '/1/object/ezsigntemplatepackage',
            (EzsigntemplatepackageCreateObjectV1R) params.get('ezsigntemplatepackageCreateObjectV1R'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplatepackageCreateObjectV1R.class
        );
    }
    /**
     * Delete an existing Ezsigntemplatepackage
     * 
     * @param pkiEzsigntemplatepackageID  (required)
     * @return EzsigntemplatepackageDeleteObjectV1R
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageDeleteObjectV1R ezsigntemplatepackageDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplatepackageID'), 'pkiEzsigntemplatepackageID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageDeleteObjectV1R) client.invoke(
            'DELETE', '/1/object/ezsigntemplatepackage/{pkiEzsigntemplatepackageID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplatepackageID' => (Integer) params.get('pkiEzsigntemplatepackageID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplatepackageDeleteObjectV1R.class
        );
    }
    /**
     * Edit multiple Ezsigntemplatepackagesigners
     * Using this endpoint, you can edit multiple Ezsigntemplatepackagesigners at the same time.
     * @param pkiEzsigntemplatepackageID  (required)
     * @param ezsigntemplatepackageEditEzsigntempl  (required)
     * @return EzsigntemplatepackageEditEzsigntempl
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageEditEzsigntempl ezsigntemplatepackageEditEzsigntemplatepackagesignersV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplatepackageID'), 'pkiEzsigntemplatepackageID');
        client.assertNotNull(params.get('ezsigntemplatepackageEditEzsigntempl'), 'ezsigntemplatepackageEditEzsigntempl');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageEditEzsigntempl) client.invoke(
            'PUT', '/1/object/ezsigntemplatepackage/{pkiEzsigntemplatepackageID}/editEzsigntemplatepackagesigners',
            (EzsigntemplatepackageEditEzsigntempl) params.get('ezsigntemplatepackageEditEzsigntempl'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplatepackageID' => (Integer) params.get('pkiEzsigntemplatepackageID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplatepackageEditEzsigntempl.class
        );
    }
    /**
     * Edit an existing Ezsigntemplatepackage
     * 
     * @param pkiEzsigntemplatepackageID  (required)
     * @param ezsigntemplatepackageEditObjectV1Req  (required)
     * @return EzsigntemplatepackageEditObjectV1Res
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageEditObjectV1Res ezsigntemplatepackageEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplatepackageID'), 'pkiEzsigntemplatepackageID');
        client.assertNotNull(params.get('ezsigntemplatepackageEditObjectV1Req'), 'ezsigntemplatepackageEditObjectV1Req');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageEditObjectV1Res) client.invoke(
            'PUT', '/1/object/ezsigntemplatepackage/{pkiEzsigntemplatepackageID}',
            (EzsigntemplatepackageEditObjectV1Req) params.get('ezsigntemplatepackageEditObjectV1Req'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplatepackageID' => (Integer) params.get('pkiEzsigntemplatepackageID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplatepackageEditObjectV1Res.class
        );
    }
    /**
     * Retrieve Ezsigntemplatepackages and IDs
     * Get the list of Ezsigntemplatepackage to be used in a dropdown or autocomplete control.
     * @param sSelector The type of Ezsigntemplatepackages to return (required)
     * @param eFilterActive Specify which results we want to display. (optional, default to Active)
     * @param sQuery Allow to filter the returned results (optional)
     * @param acceptLanguage  (optional)
     * @return EzsigntemplatepackageGetAutocomplete
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageGetAutocomplete ezsigntemplatepackageGetAutocompleteV2(Map<String, Object> params) {
        client.assertNotNull(params.get('sSelector'), 'sSelector');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eFilterActive', (String) params.get('eFilterActive')));
        query.addAll(client.makeParam('sQuery', (String) params.get('sQuery')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageGetAutocomplete) client.invoke(
            'GET', '/2/object/ezsigntemplatepackage/getAutocomplete/{sSelector}', '',
            query, form,
            new Map<String, Object>{
                'sSelector' => (String) params.get('sSelector')
            },
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplatepackageGetAutocomplete.class
        );
    }
    /**
     * Retrieve Ezsigntemplatepackage list
     * Enum values that can be filtered in query parameter *sFilter*:\n\n| Variable | Valid values |\n|---|---|\n| eEzsigntemplatepackageType | Company&lt;br&gt;Team&lt;br&gt;User&lt;br&gt;Usergroup |
     * @param eOrderBy Specify how you want the results to be sorted (optional)
     * @param iRowMax  (optional, default to 10000)
     * @param iRowOffset  (optional, default to 0)
     * @param acceptLanguage  (optional)
     * @param sFilter  (optional)
     * @return EzsigntemplatepackageGetListV1Respon
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageGetListV1Respon ezsigntemplatepackageGetListV1(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eOrderBy', (String) params.get('eOrderBy')));
        query.addAll(client.makeParam('iRowMax', (Integer) params.get('iRowMax')));
        query.addAll(client.makeParam('iRowOffset', (Integer) params.get('iRowOffset')));
        query.addAll(client.makeParam('sFilter', (String) params.get('sFilter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageGetListV1Respon) client.invoke(
            'GET', '/1/object/ezsigntemplatepackage/getList', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplatepackageGetListV1Respon.class
        );
    }
    /**
     * Retrieve an existing Ezsigntemplatepackage
     * 
     * @param pkiEzsigntemplatepackageID  (required)
     * @return EzsigntemplatepackageGetObjectV2Resp
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplatepackageGetObjectV2Resp ezsigntemplatepackageGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplatepackageID'), 'pkiEzsigntemplatepackageID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplatepackageGetObjectV2Resp) client.invoke(
            'GET', '/2/object/ezsigntemplatepackage/{pkiEzsigntemplatepackageID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplatepackageID' => (Integer) params.get('pkiEzsigntemplatepackageID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplatepackageGetObjectV2Resp.class
        );
    }
}
