/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASScimGroupsApi {
    OASClient client;

    public OASScimGroupsApi(OASClient client) {
        this.client = client;
    }

    public OASScimGroupsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new Usergroup
     * 
     * @param oaSScimGroup  (required)
     * @return OASScimGroup
     * @throws OAS.ApiException if fails to make API call
     */
    public OASScimGroup groupsCreateObjectScimV2(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSScimGroup'), 'oaSScimGroup');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASScimGroup) client.invoke(
            'POST', '/2/scim/Groups',
            (OASScimGroup) params.get('oaSScimGroup'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Bearer' },
            OASScimGroup.class
        );
    }
    /**
     * Delete an existing Usergroup
     * 
     * @param groupId  (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void groupsDeleteObjectScimV2(Map<String, Object> params) {
        client.assertNotNull(params.get('groupId'), 'groupId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/2/scim/Groups/{groupId}', '',
            query, form,
            new Map<String, Object>{
                'groupId' => (String) params.get('groupId')
            },
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String> { 'Bearer' },
            null
        );
    }
    /**
     * Edit an existing Usergroup
     * 
     * @param groupId  (required)
     * @param oaSScimGroup  (required)
     * @return OASScimGroup
     * @throws OAS.ApiException if fails to make API call
     */
    public OASScimGroup groupsEditObjectScimV2(Map<String, Object> params) {
        client.assertNotNull(params.get('groupId'), 'groupId');
        client.assertNotNull(params.get('oaSScimGroup'), 'oaSScimGroup');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASScimGroup) client.invoke(
            'PUT', '/2/scim/Groups/{groupId}',
            (OASScimGroup) params.get('oaSScimGroup'),
            query, form,
            new Map<String, Object>{
                'groupId' => (String) params.get('groupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Bearer' },
            OASScimGroup.class
        );
    }
    /**
     * Retrieve Usergroup list
     * 
     * @param filter Filter expression for searching groups (optional)
     * @return OASScimGroup
     * @throws OAS.ApiException if fails to make API call
     */
    public OASScimGroup groupsGetListScimV2(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter', (String) params.get('filter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASScimGroup) client.invoke(
            'GET', '/2/scim/Groups', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Bearer' },
            OASScimGroup.class
        );
    }
    /**
     * Retrieve an existing Usergroup
     * 
     * @param groupId  (required)
     * @return OASScimGroup
     * @throws OAS.ApiException if fails to make API call
     */
    public OASScimGroup groupsGetObjectScimV2(Map<String, Object> params) {
        client.assertNotNull(params.get('groupId'), 'groupId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASScimGroup) client.invoke(
            'GET', '/2/scim/Groups/{groupId}', '',
            query, form,
            new Map<String, Object>{
                'groupId' => (String) params.get('groupId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Bearer' },
            OASScimGroup.class
        );
    }
}
