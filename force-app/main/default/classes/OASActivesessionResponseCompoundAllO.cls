/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.16
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASActivesessionResponseCompoundAllO
 */
public class OASActivesessionResponseCompoundAllO implements OAS.MappedProperties {
    /**
     * An array of permissions granted to the user or api key
     * @return aPkiPermissionID
     */
    public List<Integer> aPkiPermissionID { get; set; }

    /**
     * Get objUserReal
     * @return objUserReal
     */
    public OASActivesessionResponseCompoundUser objUserReal { get; set; }

    /**
     * Get objUserCloned
     * @return objUserCloned
     */
    public OASActivesessionResponseCompoundUser objUserCloned { get; set; }

    /**
     * Get objApikey
     * @return objApikey
     */
    public OASActivesessionResponseCompoundApik objApikey { get; set; }

    /**
     * An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.
     * @return aEModuleInternalname
     */
    public List<String> aEModuleInternalname { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_pkiPermissionID' => 'aPkiPermissionID',
        'a_eModuleInternalname' => 'aEModuleInternalname'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_pkiPermissionID' => 'aPkiPermissionID',
        'a_eModuleInternalname' => 'aEModuleInternalname'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASActivesessionResponseCompoundAllO() {
        aPkiPermissionID = new List<Integer>();
        aEModuleInternalname = new List<String>();
    }

    public static OASActivesessionResponseCompoundAllO getExample() {
        OASActivesessionResponseCompoundAllO activesessionResponseCompoundAllOf = new OASActivesessionResponseCompoundAllO();
          activesessionResponseCompoundAllOf.aPkiPermissionID = new List<Integer>{Integer.getExample()};
          activesessionResponseCompoundAllOf.objUserReal = OASActivesessionResponseCompoundUser.getExample();
          activesessionResponseCompoundAllOf.objUserCloned = OASActivesessionResponseCompoundUser.getExample();
          activesessionResponseCompoundAllOf.objApikey = OASActivesessionResponseCompoundApik.getExample();
          activesessionResponseCompoundAllOf.aEModuleInternalname = new List<String>{String.getExample()};
        return activesessionResponseCompoundAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASActivesessionResponseCompoundAllO) {           
            OASActivesessionResponseCompoundAllO activesessionResponseCompoundAllOf = (OASActivesessionResponseCompoundAllO) obj;
            return this.aPkiPermissionID == activesessionResponseCompoundAllOf.aPkiPermissionID
                && this.objUserReal == activesessionResponseCompoundAllOf.objUserReal
                && this.objUserCloned == activesessionResponseCompoundAllOf.objUserCloned
                && this.objApikey == activesessionResponseCompoundAllOf.objApikey
                && this.aEModuleInternalname == activesessionResponseCompoundAllOf.aEModuleInternalname;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (aPkiPermissionID == null ? 0 : System.hashCode(aPkiPermissionID));
        hashCode = (17 * hashCode) + (objUserReal == null ? 0 : System.hashCode(objUserReal));
        hashCode = (17 * hashCode) + (objUserCloned == null ? 0 : System.hashCode(objUserCloned));
        hashCode = (17 * hashCode) + (objApikey == null ? 0 : System.hashCode(objApikey));
        hashCode = (17 * hashCode) + (aEModuleInternalname == null ? 0 : System.hashCode(aEModuleInternalname));
        return hashCode;
    }
}

