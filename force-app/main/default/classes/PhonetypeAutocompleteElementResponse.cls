/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Phonetype AutocompleteElement Response
 */
public class PhonetypeAutocompleteElementResponse {
    /**
     * The unique ID of the Phonetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Mobile|\n|4|Fax|\n|5|Pager|\n|6|Toll Free|
     * minimum: 0
     * @return pkiPhonetypeID
     */
    public Integer pkiPhonetypeID { get; set; }

    /**
     * The name of the Phonetype in the language of the requester
     * @return sPhonetypeNameX
     */
    public String sPhonetypeNameX { get; set; }

    /**
     * Whether the Phonetype is active or not
     * @return bPhonetypeIsactive
     */
    public Boolean bPhonetypeIsactive { get; set; }

    public static PhonetypeAutocompleteElementResponse getExample() {
        PhonetypeAutocompleteElementResponse phonetypeAutocompleteElementResponse = new PhonetypeAutocompleteElementResponse();
          phonetypeAutocompleteElementResponse.pkiPhonetypeID = 1;
          phonetypeAutocompleteElementResponse.sPhonetypeNameX = 'Office';
          phonetypeAutocompleteElementResponse.bPhonetypeIsactive = true;
        return phonetypeAutocompleteElementResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof PhonetypeAutocompleteElementResponse) {           
            PhonetypeAutocompleteElementResponse phonetypeAutocompleteElementResponse = (PhonetypeAutocompleteElementResponse) obj;
            return this.pkiPhonetypeID == phonetypeAutocompleteElementResponse.pkiPhonetypeID
                && this.sPhonetypeNameX == phonetypeAutocompleteElementResponse.sPhonetypeNameX
                && this.bPhonetypeIsactive == phonetypeAutocompleteElementResponse.bPhonetypeIsactive;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiPhonetypeID == null ? 0 : System.hashCode(pkiPhonetypeID));
        hashCode = (17 * hashCode) + (sPhonetypeNameX == null ? 0 : System.hashCode(sPhonetypeNameX));
        hashCode = (17 * hashCode) + (bPhonetypeIsactive == null ? 0 : System.hashCode(bPhonetypeIsactive));
        return hashCode;
    }
}

