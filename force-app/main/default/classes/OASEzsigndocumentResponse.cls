/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.11
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An Ezsigndocument Object
 */
public class OASEzsigndocumentResponse {
    /**
     * The unique ID of the Ezsignfolder
     * minimum: 0
     * @return fkiEzsignfolderID
     */
    public Integer fkiEzsignfolderID { get; set; }

    /**
     * The maximum date and time at which the Ezsigndocument can be signed.
     * @return dtEzsigndocumentDuedate
     */
    public String dtEzsigndocumentDuedate { get; set; }

    /**
     * The date and time at which the Ezsignform has been completed.
     * @return dtEzsignformCompleted
     */
    public String dtEzsignformCompleted { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The name of the document that will be presented to Ezsignfoldersignerassociations
     * @return sEzsigndocumentName
     */
    public String sEzsigndocumentName { get; set; }

    /**
     * The unique ID of the Ezsigndocument
     * minimum: 0
     * @return pkiEzsigndocumentID
     */
    public Integer pkiEzsigndocumentID { get; set; }

    /**
     * Get eEzsigndocumentStep
     * @return eEzsigndocumentStep
     */
    public OASFieldEEzsigndocumentStep eEzsigndocumentStep { get; set; }

    /**
     * The date and time when the Ezsigndocument was first sent.
     * @return dtEzsigndocumentFirstsend
     */
    public String dtEzsigndocumentFirstsend { get; set; }

    /**
     * The date and time when the Ezsigndocument was sent the last time.
     * @return dtEzsigndocumentLastsend
     */
    public String dtEzsigndocumentLastsend { get; set; }

    /**
     * The order in which the Ezsigndocument will be presented to the signatory in the Ezsignfolder.
     * minimum: 1
     * @return iEzsigndocumentOrder
     */
    public Integer iEzsigndocumentOrder { get; set; }

    /**
     * The number of pages in the Ezsigndocument.
     * minimum: 1
     * @return iEzsigndocumentPagetotal
     */
    public Integer iEzsigndocumentPagetotal { get; set; }

    /**
     * The number of signatures that were signed in the document.
     * minimum: 0
     * @return iEzsigndocumentSignaturesigned
     */
    public Integer iEzsigndocumentSignaturesigned { get; set; }

    /**
     * The number of total signatures that were requested in the Ezsigndocument.
     * minimum: 0
     * @return iEzsigndocumentSignaturetotal
     */
    public Integer iEzsigndocumentSignaturetotal { get; set; }

    /**
     * MD5 Hash of the initial PDF Document before signatures were applied to it.
     * @return sEzsigndocumentMD5initial
     */
    public String sEzsigndocumentMD5initial { get; set; }

    /**
     * MD5 Hash of the final PDF Document after all signatures were applied to it.
     * @return sEzsigndocumentMD5signed
     */
    public String sEzsigndocumentMD5signed { get; set; }

    /**
     * If the Ezsigndocument contains an Ezsignform or not
     * @return bEzsigndocumentEzsignform
     */
    public Boolean bEzsigndocumentEzsignform { get; set; }

    /**
     * Get objAudit
     * @return objAudit
     */
    public OASCommonAudit objAudit { get; set; }

    public static OASEzsigndocumentResponse getExample() {
        OASEzsigndocumentResponse ezsigndocumentResponse = new OASEzsigndocumentResponse();
          ezsigndocumentResponse.fkiEzsignfolderID = 33;
          ezsigndocumentResponse.dtEzsigndocumentDuedate = '2020-12-31 23:59:59';
          ezsigndocumentResponse.dtEzsignformCompleted = '2020-12-31 23:59:59';
          ezsigndocumentResponse.fkiLanguageID = 2;
          ezsigndocumentResponse.sEzsigndocumentName = 'Contract #123';
          ezsigndocumentResponse.pkiEzsigndocumentID = 97;
          ezsigndocumentResponse.eEzsigndocumentStep = OASFieldEEzsigndocumentStep.getExample();
          ezsigndocumentResponse.dtEzsigndocumentFirstsend = '2020-12-31 23:59:59';
          ezsigndocumentResponse.dtEzsigndocumentLastsend = '2020-12-31 23:59:59';
          ezsigndocumentResponse.iEzsigndocumentOrder = 1;
          ezsigndocumentResponse.iEzsigndocumentPagetotal = 4;
          ezsigndocumentResponse.iEzsigndocumentSignaturesigned = 3;
          ezsigndocumentResponse.iEzsigndocumentSignaturetotal = 4;
          ezsigndocumentResponse.sEzsigndocumentMD5initial = '012345678901234567890123456789AB';
          ezsigndocumentResponse.sEzsigndocumentMD5signed = '012345678901234567890123456789AB';
          ezsigndocumentResponse.bEzsigndocumentEzsignform = true;
          ezsigndocumentResponse.objAudit = OASCommonAudit.getExample();
        return ezsigndocumentResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsigndocumentResponse) {           
            OASEzsigndocumentResponse ezsigndocumentResponse = (OASEzsigndocumentResponse) obj;
            return this.fkiEzsignfolderID == ezsigndocumentResponse.fkiEzsignfolderID
                && this.dtEzsigndocumentDuedate == ezsigndocumentResponse.dtEzsigndocumentDuedate
                && this.dtEzsignformCompleted == ezsigndocumentResponse.dtEzsignformCompleted
                && this.fkiLanguageID == ezsigndocumentResponse.fkiLanguageID
                && this.sEzsigndocumentName == ezsigndocumentResponse.sEzsigndocumentName
                && this.pkiEzsigndocumentID == ezsigndocumentResponse.pkiEzsigndocumentID
                && this.eEzsigndocumentStep == ezsigndocumentResponse.eEzsigndocumentStep
                && this.dtEzsigndocumentFirstsend == ezsigndocumentResponse.dtEzsigndocumentFirstsend
                && this.dtEzsigndocumentLastsend == ezsigndocumentResponse.dtEzsigndocumentLastsend
                && this.iEzsigndocumentOrder == ezsigndocumentResponse.iEzsigndocumentOrder
                && this.iEzsigndocumentPagetotal == ezsigndocumentResponse.iEzsigndocumentPagetotal
                && this.iEzsigndocumentSignaturesigned == ezsigndocumentResponse.iEzsigndocumentSignaturesigned
                && this.iEzsigndocumentSignaturetotal == ezsigndocumentResponse.iEzsigndocumentSignaturetotal
                && this.sEzsigndocumentMD5initial == ezsigndocumentResponse.sEzsigndocumentMD5initial
                && this.sEzsigndocumentMD5signed == ezsigndocumentResponse.sEzsigndocumentMD5signed
                && this.bEzsigndocumentEzsignform == ezsigndocumentResponse.bEzsigndocumentEzsignform
                && this.objAudit == ezsigndocumentResponse.objAudit;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiEzsignfolderID == null ? 0 : System.hashCode(fkiEzsignfolderID));
        hashCode = (17 * hashCode) + (dtEzsigndocumentDuedate == null ? 0 : System.hashCode(dtEzsigndocumentDuedate));
        hashCode = (17 * hashCode) + (dtEzsignformCompleted == null ? 0 : System.hashCode(dtEzsignformCompleted));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sEzsigndocumentName == null ? 0 : System.hashCode(sEzsigndocumentName));
        hashCode = (17 * hashCode) + (pkiEzsigndocumentID == null ? 0 : System.hashCode(pkiEzsigndocumentID));
        hashCode = (17 * hashCode) + (eEzsigndocumentStep == null ? 0 : System.hashCode(eEzsigndocumentStep));
        hashCode = (17 * hashCode) + (dtEzsigndocumentFirstsend == null ? 0 : System.hashCode(dtEzsigndocumentFirstsend));
        hashCode = (17 * hashCode) + (dtEzsigndocumentLastsend == null ? 0 : System.hashCode(dtEzsigndocumentLastsend));
        hashCode = (17 * hashCode) + (iEzsigndocumentOrder == null ? 0 : System.hashCode(iEzsigndocumentOrder));
        hashCode = (17 * hashCode) + (iEzsigndocumentPagetotal == null ? 0 : System.hashCode(iEzsigndocumentPagetotal));
        hashCode = (17 * hashCode) + (iEzsigndocumentSignaturesigned == null ? 0 : System.hashCode(iEzsigndocumentSignaturesigned));
        hashCode = (17 * hashCode) + (iEzsigndocumentSignaturetotal == null ? 0 : System.hashCode(iEzsigndocumentSignaturetotal));
        hashCode = (17 * hashCode) + (sEzsigndocumentMD5initial == null ? 0 : System.hashCode(sEzsigndocumentMD5initial));
        hashCode = (17 * hashCode) + (sEzsigndocumentMD5signed == null ? 0 : System.hashCode(sEzsigndocumentMD5signed));
        hashCode = (17 * hashCode) + (bEzsigndocumentEzsignform == null ? 0 : System.hashCode(bEzsigndocumentEzsignform));
        hashCode = (17 * hashCode) + (objAudit == null ? 0 : System.hashCode(objAudit));
        return hashCode;
    }
}

