/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASObjectPermissionApi {
    OASClient client;

    public OASObjectPermissionApi(OASClient client) {
        this.client = client;
    }

    public OASObjectPermissionApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new Permission
     * The endpoint allows to create one or many elements at once.
     * @param oaSPermissionCreateObjectV1Request  (required)
     * @return OASPermissionCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPermissionCreateObjectV1Response permissionCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSPermissionCreateObjectV1Request'), 'oaSPermissionCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPermissionCreateObjectV1Response) client.invoke(
            'POST', '/1/object/permission',
            (OASPermissionCreateObjectV1Request) params.get('oaSPermissionCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASPermissionCreateObjectV1Response.class
        );
    }
    /**
     * Delete an existing Permission
     * 
     * @param pkiPermissionID The unique ID of the Permission (required)
     * @return OASPermissionDeleteObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPermissionDeleteObjectV1Response permissionDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiPermissionID'), 'pkiPermissionID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPermissionDeleteObjectV1Response) client.invoke(
            'DELETE', '/1/object/permission/{pkiPermissionID}', '',
            query, form,
            new Map<String, Object>{
                'pkiPermissionID' => (Integer) params.get('pkiPermissionID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASPermissionDeleteObjectV1Response.class
        );
    }
    /**
     * Edit an existing Permission
     * 
     * @param pkiPermissionID The unique ID of the Permission (required)
     * @param oaSPermissionEditObjectV1Request  (required)
     * @return OASPermissionEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPermissionEditObjectV1Response permissionEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiPermissionID'), 'pkiPermissionID');
        client.assertNotNull(params.get('oaSPermissionEditObjectV1Request'), 'oaSPermissionEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPermissionEditObjectV1Response) client.invoke(
            'PUT', '/1/object/permission/{pkiPermissionID}',
            (OASPermissionEditObjectV1Request) params.get('oaSPermissionEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiPermissionID' => (Integer) params.get('pkiPermissionID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASPermissionEditObjectV1Response.class
        );
    }
    /**
     * Retrieve an existing Permission
     * 
     * @param pkiPermissionID The unique ID of the Permission (required)
     * @return OASPermissionGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPermissionGetObjectV2Response permissionGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiPermissionID'), 'pkiPermissionID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPermissionGetObjectV2Response) client.invoke(
            'GET', '/2/object/permission/{pkiPermissionID}', '',
            query, form,
            new Map<String, Object>{
                'pkiPermissionID' => (Integer) params.get('pkiPermissionID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASPermissionGetObjectV2Response.class
        );
    }
}
