/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.32
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Ezsignsigner-&gt;Contact Object and children to create a complete structure
 */
public class OASEzsignsignerRequestCompoundContac {
    /**
     * The first name of the Contact
     * @return sContactFirstname
     */
    public String sContactFirstname { get; set; }

    /**
     * The last name of the Contact
     * @return sContactLastname
     */
    public String sContactLastname { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The email address of the contact. Must be filled if email authentification was requested
     * @return sEmailAddress
     */
    public String sEmailAddress { get; set; }

    /**
     * The Phone number of the contact.\nUse format "5149901516" for North American Numbers (Without "1" for long distance code) you would dial like this: 1-514-990-1516.\nUse format "498945233886" for international numbers (Without "011") you would dial like this: +49 89 452 33 88-6. In this example "49" is the country code of Germany.
     * @return sPhoneNumber
     */
    public String sPhoneNumber { get; set; }

    /**
     * The Cell Phone number of the contact.\nUse format "5149901516" for North American Numbers (Without "1" for long distance code) you would dial like this: 1-514-990-1516.\nUse format "498945233886" for international numbers (Without "011") you would dial like this: +49 89 452 33 88-6. In this example "49" is the country code of Germany.
     * @return sPhoneNumberCell
     */
    public String sPhoneNumberCell { get; set; }

    public static OASEzsignsignerRequestCompoundContac getExample() {
        OASEzsignsignerRequestCompoundContac ezsignsignerRequestCompoundContact = new OASEzsignsignerRequestCompoundContac();
          ezsignsignerRequestCompoundContact.sContactFirstname = '';
          ezsignsignerRequestCompoundContact.sContactLastname = '';
          ezsignsignerRequestCompoundContact.fkiLanguageID = 2;
          ezsignsignerRequestCompoundContact.sEmailAddress = '';
          ezsignsignerRequestCompoundContact.sPhoneNumber = '';
          ezsignsignerRequestCompoundContact.sPhoneNumberCell = '';
        return ezsignsignerRequestCompoundContact;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignsignerRequestCompoundContac) {           
            OASEzsignsignerRequestCompoundContac ezsignsignerRequestCompoundContact = (OASEzsignsignerRequestCompoundContac) obj;
            return this.sContactFirstname == ezsignsignerRequestCompoundContact.sContactFirstname
                && this.sContactLastname == ezsignsignerRequestCompoundContact.sContactLastname
                && this.fkiLanguageID == ezsignsignerRequestCompoundContact.fkiLanguageID
                && this.sEmailAddress == ezsignsignerRequestCompoundContact.sEmailAddress
                && this.sPhoneNumber == ezsignsignerRequestCompoundContact.sPhoneNumber
                && this.sPhoneNumberCell == ezsignsignerRequestCompoundContact.sPhoneNumberCell;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (sContactFirstname == null ? 0 : System.hashCode(sContactFirstname));
        hashCode = (17 * hashCode) + (sContactLastname == null ? 0 : System.hashCode(sContactLastname));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sEmailAddress == null ? 0 : System.hashCode(sEmailAddress));
        hashCode = (17 * hashCode) + (sPhoneNumber == null ? 0 : System.hashCode(sPhoneNumber));
        hashCode = (17 * hashCode) + (sPhoneNumberCell == null ? 0 : System.hashCode(sPhoneNumberCell));
        return hashCode;
    }
}

