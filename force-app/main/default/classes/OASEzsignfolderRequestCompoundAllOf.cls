/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASEzsignfolderRequestCompoundAllOf
 */
public class OASEzsignfolderRequestCompoundAllOf implements OAS.MappedProperties {
    /**
     * An array of signers that will be invited to sign the Ezsigndocuments
     * @return aEzsignfoldersignerassociation
     */
    public List<OASEzsignfoldersignerassociationRequ> aEzsignfoldersignerassociation { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_Ezsignfoldersignerassociation' => 'aEzsignfoldersignerassociation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASEzsignfolderRequestCompoundAllOf() {
        aEzsignfoldersignerassociation = new List<OASEzsignfoldersignerassociationRequ>();
    }

    public static OASEzsignfolderRequestCompoundAllOf getExample() {
        OASEzsignfolderRequestCompoundAllOf ezsignfolderRequestCompoundAllOf = new OASEzsignfolderRequestCompoundAllOf();
          ezsignfolderRequestCompoundAllOf.aEzsignfoldersignerassociation = new List<OASEzsignfoldersignerassociationRequ>{OASEzsignfoldersignerassociationRequ.getExample()};
        return ezsignfolderRequestCompoundAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignfolderRequestCompoundAllOf) {           
            OASEzsignfolderRequestCompoundAllOf ezsignfolderRequestCompoundAllOf = (OASEzsignfolderRequestCompoundAllOf) obj;
            return this.aEzsignfoldersignerassociation == ezsignfolderRequestCompoundAllOf.aEzsignfoldersignerassociation;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (aEzsignfoldersignerassociation == null ? 0 : System.hashCode(aEzsignfoldersignerassociation));
        return hashCode;
    }
}

