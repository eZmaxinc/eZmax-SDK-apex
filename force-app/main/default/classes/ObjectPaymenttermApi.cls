/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectPaymenttermApi {
    Client client;

    public ObjectPaymenttermApi(Client client) {
        this.client = client;
    }

    public ObjectPaymenttermApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Paymentterm
     * The endpoint allows to create one or many elements at once.
     * @param paymenttermCreateObjectV1Request  (required)
     * @return PaymenttermCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public PaymenttermCreateObjectV1Response paymenttermCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('paymenttermCreateObjectV1Request'), 'paymenttermCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (PaymenttermCreateObjectV1Response) client.invoke(
            'POST', '/1/object/paymentterm',
            (PaymenttermCreateObjectV1Request) params.get('paymenttermCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            PaymenttermCreateObjectV1Response.class
        );
    }
    /**
     * Edit an existing Paymentterm
     * 
     * @param pkiPaymenttermID  (required)
     * @param paymenttermEditObjectV1Request  (required)
     * @return PaymenttermEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public PaymenttermEditObjectV1Response paymenttermEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiPaymenttermID'), 'pkiPaymenttermID');
        client.assertNotNull(params.get('paymenttermEditObjectV1Request'), 'paymenttermEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (PaymenttermEditObjectV1Response) client.invoke(
            'PUT', '/1/object/paymentterm/{pkiPaymenttermID}',
            (PaymenttermEditObjectV1Request) params.get('paymenttermEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiPaymenttermID' => (Integer) params.get('pkiPaymenttermID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            PaymenttermEditObjectV1Response.class
        );
    }
    /**
     * Retrieve Paymentterms and IDs
     * Get the list of Paymentterm to be used in a dropdown or autocomplete control.
     * @param sSelector The type of Paymentterms to return (required)
     * @param eFilterActive Specify which results we want to display. (optional, default to Active)
     * @param sQuery Allow to filter the returned results (optional)
     * @param acceptLanguage  (optional)
     * @return PaymenttermGetAutocompleteV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public PaymenttermGetAutocompleteV2Response paymenttermGetAutocompleteV2(Map<String, Object> params) {
        client.assertNotNull(params.get('sSelector'), 'sSelector');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eFilterActive', (String) params.get('eFilterActive')));
        query.addAll(client.makeParam('sQuery', (String) params.get('sQuery')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (PaymenttermGetAutocompleteV2Response) client.invoke(
            'GET', '/2/object/paymentterm/getAutocomplete/{sSelector}', '',
            query, form,
            new Map<String, Object>{
                'sSelector' => (String) params.get('sSelector')
            },
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            PaymenttermGetAutocompleteV2Response.class
        );
    }
    /**
     * Retrieve Paymentterm list
     * 
     * @param eOrderBy Specify how you want the results to be sorted (optional)
     * @param iRowMax  (optional, default to 10000)
     * @param iRowOffset  (optional, default to 0)
     * @param acceptLanguage  (optional)
     * @param sFilter  (optional)
     * @return PaymenttermGetListV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public PaymenttermGetListV1Response paymenttermGetListV1(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eOrderBy', (String) params.get('eOrderBy')));
        query.addAll(client.makeParam('iRowMax', (Integer) params.get('iRowMax')));
        query.addAll(client.makeParam('iRowOffset', (Integer) params.get('iRowOffset')));
        query.addAll(client.makeParam('sFilter', (String) params.get('sFilter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (PaymenttermGetListV1Response) client.invoke(
            'GET', '/1/object/paymentterm/getList', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'Authorization' },
            PaymenttermGetListV1Response.class
        );
    }
    /**
     * Retrieve an existing Paymentterm
     * 
     * @param pkiPaymenttermID  (required)
     * @return PaymenttermGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public PaymenttermGetObjectV2Response paymenttermGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiPaymenttermID'), 'pkiPaymenttermID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (PaymenttermGetObjectV2Response) client.invoke(
            'GET', '/2/object/paymentterm/{pkiPaymenttermID}', '',
            query, form,
            new Map<String, Object>{
                'pkiPaymenttermID' => (Integer) params.get('pkiPaymenttermID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            PaymenttermGetObjectV2Response.class
        );
    }
}
