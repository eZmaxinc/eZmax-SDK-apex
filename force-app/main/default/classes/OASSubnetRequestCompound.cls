/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Subnet Object and children
 */
public class OASSubnetRequestCompound implements OASSubnetRequest {
    /**
     * The unique ID of the Subnet
     * minimum: 0
     * maximum: 65535
     * @return pkiSubnetID
     */
    public Integer pkiSubnetID { get; set; }

    /**
     * The unique ID of the User
     * minimum: 0
     * @return fkiUserID
     */
    public Integer fkiUserID { get; set; }

    /**
     * The unique ID of the Apikey
     * minimum: 0
     * @return fkiApikeyID
     */
    public Integer fkiApikeyID { get; set; }

    /**
     * Get objSubnetDescription
     * @return objSubnetDescription
     */
    public OASMultilingualSubnetDescription objSubnetDescription { get; set; }

    /**
     * The network of the Subnet in integer form. For example 8.8.8.0 would be 134744064
     * minimum: 0
     * maximum: 4294967295
     * @return iSubnetNetwork
     */
    public Integer iSubnetNetwork { get; set; }

    /**
     * The mask of the Subnet  in integer form. For example 255.255.255.0 would be 4294967040
     * minimum: 0
     * maximum: 4294967295
     * @return iSubnetMask
     */
    public Integer iSubnetMask { get; set; }

    public static OASSubnetRequestCompound getExample() {
        OASSubnetRequestCompound subnetRequestCompound = new OASSubnetRequestCompound();
          subnetRequestCompound.pkiSubnetID = 3;
          subnetRequestCompound.fkiUserID = 70;
          subnetRequestCompound.fkiApikeyID = 99;
          subnetRequestCompound.objSubnetDescription = OASMultilingualSubnetDescription.getExample();
          subnetRequestCompound.iSubnetNetwork = 134744064;
          subnetRequestCompound.iSubnetMask = 4294967040;
        return subnetRequestCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSubnetRequestCompound) {           
            OASSubnetRequestCompound subnetRequestCompound = (OASSubnetRequestCompound) obj;
            return this.pkiSubnetID == subnetRequestCompound.pkiSubnetID
                && this.fkiUserID == subnetRequestCompound.fkiUserID
                && this.fkiApikeyID == subnetRequestCompound.fkiApikeyID
                && this.objSubnetDescription == subnetRequestCompound.objSubnetDescription
                && this.iSubnetNetwork == subnetRequestCompound.iSubnetNetwork
                && this.iSubnetMask == subnetRequestCompound.iSubnetMask;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiSubnetID == null ? 0 : System.hashCode(pkiSubnetID));
        hashCode = (17 * hashCode) + (fkiUserID == null ? 0 : System.hashCode(fkiUserID));
        hashCode = (17 * hashCode) + (fkiApikeyID == null ? 0 : System.hashCode(fkiApikeyID));
        hashCode = (17 * hashCode) + (objSubnetDescription == null ? 0 : System.hashCode(objSubnetDescription));
        hashCode = (17 * hashCode) + (iSubnetNetwork == null ? 0 : System.hashCode(iSubnetNetwork));
        hashCode = (17 * hashCode) + (iSubnetMask == null ? 0 : System.hashCode(iSubnetMask));
        return hashCode;
    }
}

