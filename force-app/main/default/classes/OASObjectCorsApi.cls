/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASObjectCorsApi {
    OASClient client;

    public OASObjectCorsApi(OASClient client) {
        this.client = client;
    }

    public OASObjectCorsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new Cors
     * The endpoint allows to create one or many elements at once.
     * @param oaSCorsCreateObjectV1Request  (required)
     * @return OASCorsCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCorsCreateObjectV1Response corsCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSCorsCreateObjectV1Request'), 'oaSCorsCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCorsCreateObjectV1Response) client.invoke(
            'POST', '/1/object/cors',
            (OASCorsCreateObjectV1Request) params.get('oaSCorsCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASCorsCreateObjectV1Response.class
        );
    }
    /**
     * Delete an existing Cors
     * 
     * @param pkiCorsID The unique ID of the Cors (required)
     * @return OASCorsDeleteObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCorsDeleteObjectV1Response corsDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiCorsID'), 'pkiCorsID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCorsDeleteObjectV1Response) client.invoke(
            'DELETE', '/1/object/cors/{pkiCorsID}', '',
            query, form,
            new Map<String, Object>{
                'pkiCorsID' => (Integer) params.get('pkiCorsID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASCorsDeleteObjectV1Response.class
        );
    }
    /**
     * Edit an existing Cors
     * 
     * @param pkiCorsID The unique ID of the Cors (required)
     * @param oaSCorsEditObjectV1Request  (required)
     * @return OASCorsEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCorsEditObjectV1Response corsEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiCorsID'), 'pkiCorsID');
        client.assertNotNull(params.get('oaSCorsEditObjectV1Request'), 'oaSCorsEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCorsEditObjectV1Response) client.invoke(
            'PUT', '/1/object/cors/{pkiCorsID}',
            (OASCorsEditObjectV1Request) params.get('oaSCorsEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiCorsID' => (Integer) params.get('pkiCorsID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASCorsEditObjectV1Response.class
        );
    }
    /**
     * Retrieve an existing Cors
     * 
     * @param pkiCorsID The unique ID of the Cors (required)
     * @return OASCorsGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCorsGetObjectV2Response corsGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiCorsID'), 'pkiCorsID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCorsGetObjectV2Response) client.invoke(
            'GET', '/2/object/cors/{pkiCorsID}', '',
            query, form,
            new Map<String, Object>{
                'pkiCorsID' => (Integer) params.get('pkiCorsID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASCorsGetObjectV2Response.class
        );
    }
}
