/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Payload for GET /1/object/activesession/getCurrent
 */
public class OASActivesessionResponseCompound implements OASActivesessionResponse, OAS.MappedProperties {
    /**
     * Get eActivesessionUsertype
     * @return eActivesessionUsertype
     */
    public OASFieldEActivesessionUsertype eActivesessionUsertype { get; set; }

    /**
     * Get eActivesessionOrigin
     * @return eActivesessionOrigin
     */
    public OASFieldEActivesessionOrigin eActivesessionOrigin { get; set; }

    /**
     * Get eActivesessionWeekdaystart
     * @return eActivesessionWeekdaystart
     */
    public OASFieldEActivesessionWeekdaystart eActivesessionWeekdaystart { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The Name of the Company in the language of the requester
     * @return sCompanyNameX
     */
    public String sCompanyNameX { get; set; }

    /**
     * The Name of the Department in the language of the requester
     * @return sDepartmentNameX
     */
    public String sDepartmentNameX { get; set; }

    /**
     * Whether the active session is in debug or not
     * @return bActivesessionDebug
     */
    public Boolean bActivesessionDebug { get; set; }

    /**
     * Whether the active session is superadmin or not
     * @return bActivesessionIssuperadmin
     */
    public Boolean bActivesessionIssuperadmin { get; set; }

    /**
     * The customer code assigned to your account
     * @return pksCustomerCode
     */
    public String pksCustomerCode { get; set; }

    /**
     * The unique ID of the Systemconfigurationtype
     * minimum: 1
     * @return fkiSystemconfigurationtypeID
     */
    public Integer fkiSystemconfigurationtypeID { get; set; }

    /**
     * The unique ID of the Signature
     * minimum: 0
     * maximum: 16777215
     * @return fkiSignatureID
     */
    public Integer fkiSignatureID { get; set; }

    /**
     * An array of permissions granted to the user or api key
     * @return aPkiPermissionID
     */
    public List<Integer> aPkiPermissionID { get; set; }

    /**
     * Get objUserReal
     * @return objUserReal
     */
    public OASActivesessionResponseCompoundUser objUserReal { get; set; }

    /**
     * Get objUserCloned
     * @return objUserCloned
     */
    public OASActivesessionResponseCompoundUser objUserCloned { get; set; }

    /**
     * Get objApikey
     * @return objApikey
     */
    public OASActivesessionResponseCompoundApik objApikey { get; set; }

    /**
     * An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.
     * @return aEModuleInternalname
     */
    public List<String> aEModuleInternalname { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_pkiPermissionID' => 'aPkiPermissionID',
        'a_eModuleInternalname' => 'aEModuleInternalname'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_pkiPermissionID' => 'aPkiPermissionID',
        'a_eModuleInternalname' => 'aEModuleInternalname'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASActivesessionResponseCompound() {
        aPkiPermissionID = new List<Integer>();
        aEModuleInternalname = new List<String>();
    }

    public static OASActivesessionResponseCompound getExample() {
        OASActivesessionResponseCompound activesessionResponseCompound = new OASActivesessionResponseCompound();
          activesessionResponseCompound.eActivesessionUsertype = OASFieldEActivesessionUsertype.getExample();
          activesessionResponseCompound.eActivesessionOrigin = OASFieldEActivesessionOrigin.getExample();
          activesessionResponseCompound.eActivesessionWeekdaystart = OASFieldEActivesessionWeekdaystart.getExample();
          activesessionResponseCompound.fkiLanguageID = 2;
          activesessionResponseCompound.sCompanyNameX = 'Acme inc.';
          activesessionResponseCompound.sDepartmentNameX = 'Head Office';
          activesessionResponseCompound.bActivesessionDebug = false;
          activesessionResponseCompound.bActivesessionIssuperadmin = false;
          activesessionResponseCompound.pksCustomerCode = 'demo';
          activesessionResponseCompound.fkiSystemconfigurationtypeID = 28;
          activesessionResponseCompound.fkiSignatureID = 12;
          activesessionResponseCompound.aPkiPermissionID = new List<Integer>{Integer.getExample()};
          activesessionResponseCompound.objUserReal = OASActivesessionResponseCompoundUser.getExample();
          activesessionResponseCompound.objUserCloned = OASActivesessionResponseCompoundUser.getExample();
          activesessionResponseCompound.objApikey = OASActivesessionResponseCompoundApik.getExample();
          activesessionResponseCompound.aEModuleInternalname = new List<String>{String.getExample()};
        return activesessionResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASActivesessionResponseCompound) {           
            OASActivesessionResponseCompound activesessionResponseCompound = (OASActivesessionResponseCompound) obj;
            return this.eActivesessionUsertype == activesessionResponseCompound.eActivesessionUsertype
                && this.eActivesessionOrigin == activesessionResponseCompound.eActivesessionOrigin
                && this.eActivesessionWeekdaystart == activesessionResponseCompound.eActivesessionWeekdaystart
                && this.fkiLanguageID == activesessionResponseCompound.fkiLanguageID
                && this.sCompanyNameX == activesessionResponseCompound.sCompanyNameX
                && this.sDepartmentNameX == activesessionResponseCompound.sDepartmentNameX
                && this.bActivesessionDebug == activesessionResponseCompound.bActivesessionDebug
                && this.bActivesessionIssuperadmin == activesessionResponseCompound.bActivesessionIssuperadmin
                && this.pksCustomerCode == activesessionResponseCompound.pksCustomerCode
                && this.fkiSystemconfigurationtypeID == activesessionResponseCompound.fkiSystemconfigurationtypeID
                && this.fkiSignatureID == activesessionResponseCompound.fkiSignatureID
                && this.aPkiPermissionID == activesessionResponseCompound.aPkiPermissionID
                && this.objUserReal == activesessionResponseCompound.objUserReal
                && this.objUserCloned == activesessionResponseCompound.objUserCloned
                && this.objApikey == activesessionResponseCompound.objApikey
                && this.aEModuleInternalname == activesessionResponseCompound.aEModuleInternalname;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (eActivesessionUsertype == null ? 0 : System.hashCode(eActivesessionUsertype));
        hashCode = (17 * hashCode) + (eActivesessionOrigin == null ? 0 : System.hashCode(eActivesessionOrigin));
        hashCode = (17 * hashCode) + (eActivesessionWeekdaystart == null ? 0 : System.hashCode(eActivesessionWeekdaystart));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sCompanyNameX == null ? 0 : System.hashCode(sCompanyNameX));
        hashCode = (17 * hashCode) + (sDepartmentNameX == null ? 0 : System.hashCode(sDepartmentNameX));
        hashCode = (17 * hashCode) + (bActivesessionDebug == null ? 0 : System.hashCode(bActivesessionDebug));
        hashCode = (17 * hashCode) + (bActivesessionIssuperadmin == null ? 0 : System.hashCode(bActivesessionIssuperadmin));
        hashCode = (17 * hashCode) + (pksCustomerCode == null ? 0 : System.hashCode(pksCustomerCode));
        hashCode = (17 * hashCode) + (fkiSystemconfigurationtypeID == null ? 0 : System.hashCode(fkiSystemconfigurationtypeID));
        hashCode = (17 * hashCode) + (fkiSignatureID == null ? 0 : System.hashCode(fkiSignatureID));
        hashCode = (17 * hashCode) + (aPkiPermissionID == null ? 0 : System.hashCode(aPkiPermissionID));
        hashCode = (17 * hashCode) + (objUserReal == null ? 0 : System.hashCode(objUserReal));
        hashCode = (17 * hashCode) + (objUserCloned == null ? 0 : System.hashCode(objUserCloned));
        hashCode = (17 * hashCode) + (objApikey == null ? 0 : System.hashCode(objApikey));
        hashCode = (17 * hashCode) + (aEModuleInternalname == null ? 0 : System.hashCode(aEModuleInternalname));
        return hashCode;
    }
}

