/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An EzmaxinvoicingEzsignfolder object containing information about the Ezmaxinvoicing for an Ezsignfolder
 */
public class CustomEzmaxinvoicingEzsignfolderResp {
    /**
     * The unique ID of the Ezsignfolder
     * minimum: 0
     * @return fkiEzsignfolderID
     */
    public Integer fkiEzsignfolderID { get; set; }

    /**
     * The description of the Ezsignfolder
     * @return sEzsignfolderDescription
     */
    public String sEzsignfolderDescription { get; set; }

    /**
     * Whether the TSA requirement is billable or not
     * @return bEzsigntsarequirementBillable
     */
    public Boolean bEzsigntsarequirementBillable { get; set; }

    /**
     * Whether the MFA was used or not for the Ezsignfolder
     * @return bEzsignfolderMfaused
     */
    public Boolean bEzsignfolderMfaused { get; set; }

    /**
     * Whether there was a signature is of type payment
     * @return bEzsignfolderPaymentused
     */
    public Boolean bEzsignfolderPaymentused { get; set; }

    /**
     * Whether you have access to the Ezsignfolder or not
     * @return bEzsignfolderAllowed
     */
    public Boolean bEzsignfolderAllowed { get; set; }

    public static CustomEzmaxinvoicingEzsignfolderResp getExample() {
        CustomEzmaxinvoicingEzsignfolderResp customEzmaxinvoicingEzsignfolderResponse = new CustomEzmaxinvoicingEzsignfolderResp();
          customEzmaxinvoicingEzsignfolderResponse.fkiEzsignfolderID = 33;
          customEzmaxinvoicingEzsignfolderResponse.sEzsignfolderDescription = 'Test eZsign Folder';
          customEzmaxinvoicingEzsignfolderResponse.bEzsigntsarequirementBillable = true;
          customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderMfaused = true;
          customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderPaymentused = true;
          customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderAllowed = true;
        return customEzmaxinvoicingEzsignfolderResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof CustomEzmaxinvoicingEzsignfolderResp) {           
            CustomEzmaxinvoicingEzsignfolderResp customEzmaxinvoicingEzsignfolderResponse = (CustomEzmaxinvoicingEzsignfolderResp) obj;
            return this.fkiEzsignfolderID == customEzmaxinvoicingEzsignfolderResponse.fkiEzsignfolderID
                && this.sEzsignfolderDescription == customEzmaxinvoicingEzsignfolderResponse.sEzsignfolderDescription
                && this.bEzsigntsarequirementBillable == customEzmaxinvoicingEzsignfolderResponse.bEzsigntsarequirementBillable
                && this.bEzsignfolderMfaused == customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderMfaused
                && this.bEzsignfolderPaymentused == customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderPaymentused
                && this.bEzsignfolderAllowed == customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderAllowed;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiEzsignfolderID == null ? 0 : System.hashCode(fkiEzsignfolderID));
        hashCode = (17 * hashCode) + (sEzsignfolderDescription == null ? 0 : System.hashCode(sEzsignfolderDescription));
        hashCode = (17 * hashCode) + (bEzsigntsarequirementBillable == null ? 0 : System.hashCode(bEzsigntsarequirementBillable));
        hashCode = (17 * hashCode) + (bEzsignfolderMfaused == null ? 0 : System.hashCode(bEzsignfolderMfaused));
        hashCode = (17 * hashCode) + (bEzsignfolderPaymentused == null ? 0 : System.hashCode(bEzsignfolderPaymentused));
        hashCode = (17 * hashCode) + (bEzsignfolderAllowed == null ? 0 : System.hashCode(bEzsignfolderAllowed));
        return hashCode;
    }
}

