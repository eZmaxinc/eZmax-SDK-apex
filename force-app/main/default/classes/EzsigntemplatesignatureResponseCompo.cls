/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Ezsigntemplatesignature Object
 */
public class EzsigntemplatesignatureResponseCompo implements EzsigntemplatesignatureResponse, OAS.MappedProperties {
    /**
     * The unique ID of the Ezsigntemplatesignature
     * minimum: 0
     * @return pkiEzsigntemplatesignatureID
     */
    public Integer pkiEzsigntemplatesignatureID { get; set; }

    /**
     * The unique ID of the Ezsigntemplatedocument
     * minimum: 0
     * @return fkiEzsigntemplatedocumentID
     */
    public Integer fkiEzsigntemplatedocumentID { get; set; }

    /**
     * The unique ID of the Ezsigntemplatesigner
     * minimum: 0
     * @return fkiEzsigntemplatesignerID
     */
    public Integer fkiEzsigntemplatesignerID { get; set; }

    /**
     * The unique ID of the Ezsigntemplatesigner
     * minimum: 0
     * @return fkiEzsigntemplatesignerIDValidation
     */
    public Integer fkiEzsigntemplatesignerIDValidation { get; set; }

    /**
     * The page number in the Ezsigntemplatedocument
     * minimum: 1
     * @return iEzsigntemplatedocumentpagePagenumber
     */
    public Integer iEzsigntemplatedocumentpagePagenumber { get; set; }

    /**
     * The X coordinate (Horizontal) where to put the Ezsigntemplatesignature on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 2 inches from the left border of the page, you would use "200" for the X coordinate.
     * minimum: 0
     * @return iEzsigntemplatesignatureX
     */
    public Integer iEzsigntemplatesignatureX { get; set; }

    /**
     * The Y coordinate (Vertical) where to put the Ezsigntemplatesignature on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 3 inches from the top border of the page, you would use "300" for the Y coordinate.
     * minimum: 0
     * @return iEzsigntemplatesignatureY
     */
    public Integer iEzsigntemplatesignatureY { get; set; }

    /**
     * The width of the Ezsigntemplatesignature.\n\nSize is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have a width of 2 inches, you would use "200" for the iEzsigntemplatesignatureWidth.
     * minimum: 0
     * @return iEzsigntemplatesignatureWidth
     */
    public Integer iEzsigntemplatesignatureWidth { get; set; }

    /**
     * The height of the Ezsigntemplatesignature.\n\nSize is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have an height of 2 inches, you would use "200" for the iEzsigntemplatesignatureHeight.
     * minimum: 0
     * @return iEzsigntemplatesignatureHeight
     */
    public Integer iEzsigntemplatesignatureHeight { get; set; }

    /**
     * The step when the Ezsigntemplatesigner will be invited to sign
     * minimum: 1
     * @return iEzsigntemplatesignatureStep
     */
    public Integer iEzsigntemplatesignatureStep { get; set; }

    /**
     * Get eEzsigntemplatesignatureType
     * @return eEzsigntemplatesignatureType
     */
    public FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType { get; set; }

    /**
     * A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplatesignature
     * @return tEzsigntemplatesignatureTooltip
     */
    public String tEzsigntemplatesignatureTooltip { get; set; }

    /**
     * Get eEzsigntemplatesignatureTooltipposition
     * @return eEzsigntemplatesignatureTooltipposition
     */
    public FieldEEzsigntemplatesignatureTooltip eEzsigntemplatesignatureTooltipposition { get; set; }

    /**
     * Get eEzsigntemplatesignatureFont
     * @return eEzsigntemplatesignatureFont
     */
    public FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont { get; set; }

    /**
     * The step when the Ezsigntemplatesigner will be invited to validate the Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
     * @return iEzsigntemplatesignatureValidationstep
     */
    public Integer iEzsigntemplatesignatureValidationstep { get; set; }

    /**
     * The description attached to the attachment name added in Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
     * @return sEzsigntemplatesignatureAttachmentdescription
     */
    public String sEzsigntemplatesignatureAttachmentdescription { get; set; }

    /**
     * Get eEzsigntemplatesignatureAttachmentnamesource
     * @return eEzsigntemplatesignatureAttachmentnamesource
     */
    public FieldEEzsigntemplatesignatureAttachm eEzsigntemplatesignatureAttachmentnamesource { get; set; }

    /**
     * Whether the Ezsigntemplatesignature is required or not. This field is relevant only with Ezsigntemplatesignature with eEzsigntemplatesignatureType = Attachments.
     * @return bEzsigntemplatesignatureRequired
     */
    public Boolean bEzsigntemplatesignatureRequired { get; set; }

    /**
     * The maximum length for the value in the Ezsigntemplatesignature\n\nThis can only be set if eEzsigntemplatesignatureType is **FieldText** or **FieldTextarea**
     * minimum: 0
     * maximum: 65535
     * @return iEzsigntemplatesignatureMaxlength
     */
    public Integer iEzsigntemplatesignatureMaxlength { get; set; }

    /**
     * A regular expression to indicate what values are acceptable for the Ezsigntemplatesignature.\n\nThis can only be set if eEzsigntemplatesignatureType is **Text** or **Textarea**
     * @return sEzsigntemplatesignatureRegexp
     */
    public String sEzsigntemplatesignatureRegexp { get; set; }

    /**
     * Get eEzsigntemplatesignatureTextvalidation
     * @return eEzsigntemplatesignatureTextvalidation
     */
    public EnumTextvalidation eEzsigntemplatesignatureTextvalidation { get; set; }

    /**
     * Get eEzsigntemplatesignatureDependencyrequirement
     * @return eEzsigntemplatesignatureDependencyrequirement
     */
    public FieldEEzsigntemplatesignatureDepende eEzsigntemplatesignatureDependencyrequirement { get; set; }

    /**
     * Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)
     * @return bEzsigntemplatesignatureCustomdate
     */
    public Boolean bEzsigntemplatesignatureCustomdate { get; set; }

    /**
     * An array of custom date blocks that will be filled at the time of signature.\n\nCan only be used if bEzsigntemplatesignatureCustomdate is true.\n\nUse an empty array if you don\'t want to have a date at all.
     * @return aObjEzsigntemplatesignaturecustomdate
     */
    public List<EzsigntemplatesignaturecustomdateRes> aObjEzsigntemplatesignaturecustomdate { get; set; }

    /**
     * Get aObjEzsigntemplateelementdependency
     * @return aObjEzsigntemplateelementdependency
     */
    public List<EzsigntemplateelementdependencyRespo> aObjEzsigntemplateelementdependency { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_objEzsigntemplatesignaturecustomdate' => 'aObjEzsigntemplatesignaturecustomdate',
        'a_objEzsigntemplateelementdependency' => 'aObjEzsigntemplateelementdependency'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_objEzsigntemplatesignaturecustomdate' => 'aObjEzsigntemplatesignaturecustomdate',
        'a_objEzsigntemplateelementdependency' => 'aObjEzsigntemplateelementdependency'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public EzsigntemplatesignatureResponseCompo() {
        aObjEzsigntemplatesignaturecustomdate = new List<EzsigntemplatesignaturecustomdateRes>();
        aObjEzsigntemplateelementdependency = new List<EzsigntemplateelementdependencyRespo>();
    }

    public static EzsigntemplatesignatureResponseCompo getExample() {
        EzsigntemplatesignatureResponseCompo ezsigntemplatesignatureResponseCompound = new EzsigntemplatesignatureResponseCompo();
          ezsigntemplatesignatureResponseCompound.pkiEzsigntemplatesignatureID = 99;
          ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatedocumentID = 133;
          ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatesignerID = 9;
          ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatesignerIDValidation = 9;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatedocumentpagePagenumber = 1;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureX = 200;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureY = 300;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureWidth = 200;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureHeight = 200;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureStep = 1;
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureType = FieldEEzsigntemplatesignatureType.getExample();
          ezsigntemplatesignatureResponseCompound.tEzsigntemplatesignatureTooltip = 'Please sign here if you agree to the terms';
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureTooltipposition = FieldEEzsigntemplatesignatureTooltip.getExample();
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureFont = FieldEEzsigntemplatesignatureFont.getExample();
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureValidationstep = 1;
          ezsigntemplatesignatureResponseCompound.sEzsigntemplatesignatureAttachmentdescription = 'Attachment';
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureAttachmentnamesource = FieldEEzsigntemplatesignatureAttachm.getExample();
          ezsigntemplatesignatureResponseCompound.bEzsigntemplatesignatureRequired = true;
          ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureMaxlength = 75;
          ezsigntemplatesignatureResponseCompound.sEzsigntemplatesignatureRegexp = '/[-0-9a-zA-Z.+_]+@[-0-9a-zA-Z.+_]+.[a-zA-Z]{2,4}/';
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureTextvalidation = EnumTextvalidation.getExample();
          ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureDependencyrequirement = FieldEEzsigntemplatesignatureDepende.getExample();
          ezsigntemplatesignatureResponseCompound.bEzsigntemplatesignatureCustomdate = true;
          ezsigntemplatesignatureResponseCompound.aObjEzsigntemplatesignaturecustomdate = new List<EzsigntemplatesignaturecustomdateRes>{EzsigntemplatesignaturecustomdateRes.getExample()};
          ezsigntemplatesignatureResponseCompound.aObjEzsigntemplateelementdependency = new List<EzsigntemplateelementdependencyRespo>{EzsigntemplateelementdependencyRespo.getExample()};
        return ezsigntemplatesignatureResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof EzsigntemplatesignatureResponseCompo) {           
            EzsigntemplatesignatureResponseCompo ezsigntemplatesignatureResponseCompound = (EzsigntemplatesignatureResponseCompo) obj;
            return this.pkiEzsigntemplatesignatureID == ezsigntemplatesignatureResponseCompound.pkiEzsigntemplatesignatureID
                && this.fkiEzsigntemplatedocumentID == ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatedocumentID
                && this.fkiEzsigntemplatesignerID == ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatesignerID
                && this.fkiEzsigntemplatesignerIDValidation == ezsigntemplatesignatureResponseCompound.fkiEzsigntemplatesignerIDValidation
                && this.iEzsigntemplatedocumentpagePagenumber == ezsigntemplatesignatureResponseCompound.iEzsigntemplatedocumentpagePagenumber
                && this.iEzsigntemplatesignatureX == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureX
                && this.iEzsigntemplatesignatureY == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureY
                && this.iEzsigntemplatesignatureWidth == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureWidth
                && this.iEzsigntemplatesignatureHeight == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureHeight
                && this.iEzsigntemplatesignatureStep == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureStep
                && this.eEzsigntemplatesignatureType == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureType
                && this.tEzsigntemplatesignatureTooltip == ezsigntemplatesignatureResponseCompound.tEzsigntemplatesignatureTooltip
                && this.eEzsigntemplatesignatureTooltipposition == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureTooltipposition
                && this.eEzsigntemplatesignatureFont == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureFont
                && this.iEzsigntemplatesignatureValidationstep == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureValidationstep
                && this.sEzsigntemplatesignatureAttachmentdescription == ezsigntemplatesignatureResponseCompound.sEzsigntemplatesignatureAttachmentdescription
                && this.eEzsigntemplatesignatureAttachmentnamesource == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureAttachmentnamesource
                && this.bEzsigntemplatesignatureRequired == ezsigntemplatesignatureResponseCompound.bEzsigntemplatesignatureRequired
                && this.iEzsigntemplatesignatureMaxlength == ezsigntemplatesignatureResponseCompound.iEzsigntemplatesignatureMaxlength
                && this.sEzsigntemplatesignatureRegexp == ezsigntemplatesignatureResponseCompound.sEzsigntemplatesignatureRegexp
                && this.eEzsigntemplatesignatureTextvalidation == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureTextvalidation
                && this.eEzsigntemplatesignatureDependencyrequirement == ezsigntemplatesignatureResponseCompound.eEzsigntemplatesignatureDependencyrequirement
                && this.bEzsigntemplatesignatureCustomdate == ezsigntemplatesignatureResponseCompound.bEzsigntemplatesignatureCustomdate
                && this.aObjEzsigntemplatesignaturecustomdate == ezsigntemplatesignatureResponseCompound.aObjEzsigntemplatesignaturecustomdate
                && this.aObjEzsigntemplateelementdependency == ezsigntemplatesignatureResponseCompound.aObjEzsigntemplateelementdependency;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsigntemplatesignatureID == null ? 0 : System.hashCode(pkiEzsigntemplatesignatureID));
        hashCode = (17 * hashCode) + (fkiEzsigntemplatedocumentID == null ? 0 : System.hashCode(fkiEzsigntemplatedocumentID));
        hashCode = (17 * hashCode) + (fkiEzsigntemplatesignerID == null ? 0 : System.hashCode(fkiEzsigntemplatesignerID));
        hashCode = (17 * hashCode) + (fkiEzsigntemplatesignerIDValidation == null ? 0 : System.hashCode(fkiEzsigntemplatesignerIDValidation));
        hashCode = (17 * hashCode) + (iEzsigntemplatedocumentpagePagenumber == null ? 0 : System.hashCode(iEzsigntemplatedocumentpagePagenumber));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureX == null ? 0 : System.hashCode(iEzsigntemplatesignatureX));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureY == null ? 0 : System.hashCode(iEzsigntemplatesignatureY));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureWidth == null ? 0 : System.hashCode(iEzsigntemplatesignatureWidth));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureHeight == null ? 0 : System.hashCode(iEzsigntemplatesignatureHeight));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureStep == null ? 0 : System.hashCode(iEzsigntemplatesignatureStep));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureType == null ? 0 : System.hashCode(eEzsigntemplatesignatureType));
        hashCode = (17 * hashCode) + (tEzsigntemplatesignatureTooltip == null ? 0 : System.hashCode(tEzsigntemplatesignatureTooltip));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureTooltipposition == null ? 0 : System.hashCode(eEzsigntemplatesignatureTooltipposition));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureFont == null ? 0 : System.hashCode(eEzsigntemplatesignatureFont));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureValidationstep == null ? 0 : System.hashCode(iEzsigntemplatesignatureValidationstep));
        hashCode = (17 * hashCode) + (sEzsigntemplatesignatureAttachmentdescription == null ? 0 : System.hashCode(sEzsigntemplatesignatureAttachmentdescription));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureAttachmentnamesource == null ? 0 : System.hashCode(eEzsigntemplatesignatureAttachmentnamesource));
        hashCode = (17 * hashCode) + (bEzsigntemplatesignatureRequired == null ? 0 : System.hashCode(bEzsigntemplatesignatureRequired));
        hashCode = (17 * hashCode) + (iEzsigntemplatesignatureMaxlength == null ? 0 : System.hashCode(iEzsigntemplatesignatureMaxlength));
        hashCode = (17 * hashCode) + (sEzsigntemplatesignatureRegexp == null ? 0 : System.hashCode(sEzsigntemplatesignatureRegexp));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureTextvalidation == null ? 0 : System.hashCode(eEzsigntemplatesignatureTextvalidation));
        hashCode = (17 * hashCode) + (eEzsigntemplatesignatureDependencyrequirement == null ? 0 : System.hashCode(eEzsigntemplatesignatureDependencyrequirement));
        hashCode = (17 * hashCode) + (bEzsigntemplatesignatureCustomdate == null ? 0 : System.hashCode(bEzsigntemplatesignatureCustomdate));
        hashCode = (17 * hashCode) + (aObjEzsigntemplatesignaturecustomdate == null ? 0 : System.hashCode(aObjEzsigntemplatesignaturecustomdate));
        hashCode = (17 * hashCode) + (aObjEzsigntemplateelementdependency == null ? 0 : System.hashCode(aObjEzsigntemplateelementdependency));
        return hashCode;
    }
}

