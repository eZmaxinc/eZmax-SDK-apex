/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectEzsigntemplateApi {
    Client client;

    public ObjectEzsigntemplateApi(Client client) {
        this.client = client;
    }

    public ObjectEzsigntemplateApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Copy the Ezsigntemplate
     * 
     * @param pkiEzsigntemplateID  (required)
     * @param ezsigntemplateCopyV1Request  (required)
     * @return EzsigntemplateCopyV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateCopyV1Response ezsigntemplateCopyV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplateID'), 'pkiEzsigntemplateID');
        client.assertNotNull(params.get('ezsigntemplateCopyV1Request'), 'ezsigntemplateCopyV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateCopyV1Response) client.invoke(
            'POST', '/1/object/ezsigntemplate/{pkiEzsigntemplateID}/copy',
            (EzsigntemplateCopyV1Request) params.get('ezsigntemplateCopyV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplateID' => (Integer) params.get('pkiEzsigntemplateID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplateCopyV1Response.class
        );
    }
    /**
     * Create a new Ezsigntemplate
     * The endpoint allows to create one or many elements at once.
     * @param ezsigntemplateCreateObjectV1Request  (required)
     * @return EzsigntemplateCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateCreateObjectV1Response ezsigntemplateCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsigntemplateCreateObjectV1Request'), 'ezsigntemplateCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateCreateObjectV1Response) client.invoke(
            'POST', '/1/object/ezsigntemplate',
            (EzsigntemplateCreateObjectV1Request) params.get('ezsigntemplateCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplateCreateObjectV1Response.class
        );
    }
    /**
     * Delete an existing Ezsigntemplate
     * 
     * @param pkiEzsigntemplateID  (required)
     * @return EzsigntemplateDeleteObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateDeleteObjectV1Response ezsigntemplateDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplateID'), 'pkiEzsigntemplateID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateDeleteObjectV1Response) client.invoke(
            'DELETE', '/1/object/ezsigntemplate/{pkiEzsigntemplateID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplateID' => (Integer) params.get('pkiEzsigntemplateID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplateDeleteObjectV1Response.class
        );
    }
    /**
     * Edit an existing Ezsigntemplate
     * 
     * @param pkiEzsigntemplateID  (required)
     * @param ezsigntemplateEditObjectV1Request  (required)
     * @return EzsigntemplateEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateEditObjectV1Response ezsigntemplateEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplateID'), 'pkiEzsigntemplateID');
        client.assertNotNull(params.get('ezsigntemplateEditObjectV1Request'), 'ezsigntemplateEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateEditObjectV1Response) client.invoke(
            'PUT', '/1/object/ezsigntemplate/{pkiEzsigntemplateID}',
            (EzsigntemplateEditObjectV1Request) params.get('ezsigntemplateEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplateID' => (Integer) params.get('pkiEzsigntemplateID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsigntemplateEditObjectV1Response.class
        );
    }
    /**
     * Retrieve Ezsigntemplates and IDs
     * Get the list of Ezsigntemplate to be used in a dropdown or autocomplete control.
     * @param sSelector The type of Ezsigntemplates to return (required)
     * @param eFilterActive Specify which results we want to display. (optional, default to Active)
     * @param sQuery Allow to filter the returned results (optional)
     * @param acceptLanguage  (optional)
     * @return EzsigntemplateGetAutocompleteV2Respo
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateGetAutocompleteV2Respo ezsigntemplateGetAutocompleteV2(Map<String, Object> params) {
        client.assertNotNull(params.get('sSelector'), 'sSelector');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eFilterActive', (String) params.get('eFilterActive')));
        query.addAll(client.makeParam('sQuery', (String) params.get('sQuery')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateGetAutocompleteV2Respo) client.invoke(
            'GET', '/2/object/ezsigntemplate/getAutocomplete/{sSelector}', '',
            query, form,
            new Map<String, Object>{
                'sSelector' => (String) params.get('sSelector')
            },
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplateGetAutocompleteV2Respo.class
        );
    }
    /**
     * Retrieve Ezsigntemplate list
     * Enum values that can be filtered in query parameter *sFilter*:\n\n| Variable | Valid values |\n|---|---|\n| eEzsigntemplateType | Company&lt;br&gt;Team&lt;br&gt;User&lt;br&gt;Usergroup |\n
     * @param eOrderBy Specify how you want the results to be sorted (optional)
     * @param iRowMax  (optional, default to 10000)
     * @param iRowOffset  (optional, default to 0)
     * @param acceptLanguage  (optional)
     * @param sFilter  (optional)
     * @return EzsigntemplateGetListV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateGetListV1Response ezsigntemplateGetListV1(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eOrderBy', (String) params.get('eOrderBy')));
        query.addAll(client.makeParam('iRowMax', (Integer) params.get('iRowMax')));
        query.addAll(client.makeParam('iRowOffset', (Integer) params.get('iRowOffset')));
        query.addAll(client.makeParam('sFilter', (String) params.get('sFilter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateGetListV1Response) client.invoke(
            'GET', '/1/object/ezsigntemplate/getList', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplateGetListV1Response.class
        );
    }
    /**
     * Retrieve an existing Ezsigntemplate
     * 
     * @param pkiEzsigntemplateID  (required)
     * @return EzsigntemplateGetObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateGetObjectV1Response ezsigntemplateGetObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplateID'), 'pkiEzsigntemplateID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateGetObjectV1Response) client.invoke(
            'GET', '/1/object/ezsigntemplate/{pkiEzsigntemplateID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplateID' => (Integer) params.get('pkiEzsigntemplateID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplateGetObjectV1Response.class
        );
    }
    /**
     * Retrieve an existing Ezsigntemplate
     * 
     * @param pkiEzsigntemplateID  (required)
     * @return EzsigntemplateGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsigntemplateGetObjectV2Response ezsigntemplateGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigntemplateID'), 'pkiEzsigntemplateID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsigntemplateGetObjectV2Response) client.invoke(
            'GET', '/2/object/ezsigntemplate/{pkiEzsigntemplateID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigntemplateID' => (Integer) params.get('pkiEzsigntemplateID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsigntemplateGetObjectV2Response.class
        );
    }
}
