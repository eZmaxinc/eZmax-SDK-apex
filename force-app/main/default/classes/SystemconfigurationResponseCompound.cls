/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Systemconfiguration Object
 */
public class SystemconfigurationResponseCompound implements SystemconfigurationResponse {
    /**
     * The unique ID of the Systemconfiguration
     * minimum: 1
     * maximum: 1
     * @return pkiSystemconfigurationID
     */
    public Integer pkiSystemconfigurationID { get; set; }

    /**
     * The unique ID of the Systemconfigurationtype
     * minimum: 1
     * @return fkiSystemconfigurationtypeID
     */
    public Integer fkiSystemconfigurationtypeID { get; set; }

    /**
     * The description of the Systemconfigurationtype in the language of the requester
     * @return sSystemconfigurationtypeDescriptionX
     */
    public String sSystemconfigurationtypeDescriptionX { get; set; }

    /**
     * Get eSystemconfigurationNewexternaluseraction
     * @return eSystemconfigurationNewexternaluseraction
     */
    public FieldESystemconfigurationNewexternal eSystemconfigurationNewexternaluseraction { get; set; }

    /**
     * Get eSystemconfigurationLanguage1
     * @return eSystemconfigurationLanguage1
     */
    public FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1 { get; set; }

    /**
     * Get eSystemconfigurationLanguage2
     * @return eSystemconfigurationLanguage2
     */
    public FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2 { get; set; }

    /**
     * Get eSystemconfigurationEzsign
     * @return eSystemconfigurationEzsign
     */
    public FieldESystemconfigurationEzsign eSystemconfigurationEzsign { get; set; }

    /**
     * Whether if we allow the creation of personal files in eZsign
     * @return bSystemconfigurationEzsignpersonnal
     */
    public Boolean bSystemconfigurationEzsignpersonnal { get; set; }

    /**
     * Whether if we allow SSPR
     * @return bSystemconfigurationSspr
     */
    public Boolean bSystemconfigurationSspr { get; set; }

    /**
     * The start date where the system will be in read only
     * @return dtSystemconfigurationReadonlyexpirationstart
     */
    public String dtSystemconfigurationReadonlyexpirationstart { get; set; }

    /**
     * The end date where the system will be in read only
     * @return dtSystemconfigurationReadonlyexpirationend
     */
    public String dtSystemconfigurationReadonlyexpirationend { get; set; }

    public static SystemconfigurationResponseCompound getExample() {
        SystemconfigurationResponseCompound systemconfigurationResponseCompound = new SystemconfigurationResponseCompound();
          systemconfigurationResponseCompound.pkiSystemconfigurationID = 1;
          systemconfigurationResponseCompound.fkiSystemconfigurationtypeID = 28;
          systemconfigurationResponseCompound.sSystemconfigurationtypeDescriptionX = 'eZsign (Pro)';
          systemconfigurationResponseCompound.eSystemconfigurationNewexternaluseraction = FieldESystemconfigurationNewexternal.getExample();
          systemconfigurationResponseCompound.eSystemconfigurationLanguage1 = FieldESystemconfigurationLanguage1.getExample();
          systemconfigurationResponseCompound.eSystemconfigurationLanguage2 = FieldESystemconfigurationLanguage2.getExample();
          systemconfigurationResponseCompound.eSystemconfigurationEzsign = FieldESystemconfigurationEzsign.getExample();
          systemconfigurationResponseCompound.bSystemconfigurationEzsignpersonnal = true;
          systemconfigurationResponseCompound.bSystemconfigurationSspr = true;
          systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationstart = '2020-12-31';
          systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationend = '2021-12-31';
        return systemconfigurationResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SystemconfigurationResponseCompound) {           
            SystemconfigurationResponseCompound systemconfigurationResponseCompound = (SystemconfigurationResponseCompound) obj;
            return this.pkiSystemconfigurationID == systemconfigurationResponseCompound.pkiSystemconfigurationID
                && this.fkiSystemconfigurationtypeID == systemconfigurationResponseCompound.fkiSystemconfigurationtypeID
                && this.sSystemconfigurationtypeDescriptionX == systemconfigurationResponseCompound.sSystemconfigurationtypeDescriptionX
                && this.eSystemconfigurationNewexternaluseraction == systemconfigurationResponseCompound.eSystemconfigurationNewexternaluseraction
                && this.eSystemconfigurationLanguage1 == systemconfigurationResponseCompound.eSystemconfigurationLanguage1
                && this.eSystemconfigurationLanguage2 == systemconfigurationResponseCompound.eSystemconfigurationLanguage2
                && this.eSystemconfigurationEzsign == systemconfigurationResponseCompound.eSystemconfigurationEzsign
                && this.bSystemconfigurationEzsignpersonnal == systemconfigurationResponseCompound.bSystemconfigurationEzsignpersonnal
                && this.bSystemconfigurationSspr == systemconfigurationResponseCompound.bSystemconfigurationSspr
                && this.dtSystemconfigurationReadonlyexpirationstart == systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationstart
                && this.dtSystemconfigurationReadonlyexpirationend == systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationend;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiSystemconfigurationID == null ? 0 : System.hashCode(pkiSystemconfigurationID));
        hashCode = (17 * hashCode) + (fkiSystemconfigurationtypeID == null ? 0 : System.hashCode(fkiSystemconfigurationtypeID));
        hashCode = (17 * hashCode) + (sSystemconfigurationtypeDescriptionX == null ? 0 : System.hashCode(sSystemconfigurationtypeDescriptionX));
        hashCode = (17 * hashCode) + (eSystemconfigurationNewexternaluseraction == null ? 0 : System.hashCode(eSystemconfigurationNewexternaluseraction));
        hashCode = (17 * hashCode) + (eSystemconfigurationLanguage1 == null ? 0 : System.hashCode(eSystemconfigurationLanguage1));
        hashCode = (17 * hashCode) + (eSystemconfigurationLanguage2 == null ? 0 : System.hashCode(eSystemconfigurationLanguage2));
        hashCode = (17 * hashCode) + (eSystemconfigurationEzsign == null ? 0 : System.hashCode(eSystemconfigurationEzsign));
        hashCode = (17 * hashCode) + (bSystemconfigurationEzsignpersonnal == null ? 0 : System.hashCode(bSystemconfigurationEzsignpersonnal));
        hashCode = (17 * hashCode) + (bSystemconfigurationSspr == null ? 0 : System.hashCode(bSystemconfigurationSspr));
        hashCode = (17 * hashCode) + (dtSystemconfigurationReadonlyexpirationstart == null ? 0 : System.hashCode(dtSystemconfigurationReadonlyexpirationstart));
        hashCode = (17 * hashCode) + (dtSystemconfigurationReadonlyexpirationend == null ? 0 : System.hashCode(dtSystemconfigurationReadonlyexpirationend));
        return hashCode;
    }
}

