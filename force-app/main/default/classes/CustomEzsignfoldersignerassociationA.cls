/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Ezsignfoldersignerassociation Object with actionable elements
 */
public class CustomEzsignfoldersignerassociationA implements EzsignfoldersignerassociationRespons {
    /**
     * The unique ID of the Ezsignfoldersignerassociation
     * minimum: 0
     * @return pkiEzsignfoldersignerassociationID
     */
    public Integer pkiEzsignfoldersignerassociationID { get; set; }

    /**
     * The unique ID of the Ezsignfolder
     * minimum: 0
     * @return fkiEzsignfolderID
     */
    public Integer fkiEzsignfolderID { get; set; }

    /**
     * If this flag is true the signatory is part of a delayed send.
     * @return bEzsignfoldersignerassociationDelayedsend
     */
    public Boolean bEzsignfoldersignerassociationDelayedsend { get; set; }

    /**
     * If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain\'t required to sign the document.
     * @return bEzsignfoldersignerassociationReceivecopy
     */
    public Boolean bEzsignfoldersignerassociationReceivecopy { get; set; }

    /**
     * A custom text message that will be added to the email sent.
     * @return tEzsignfoldersignerassociationMessage
     */
    public String tEzsignfoldersignerassociationMessage { get; set; }

    /**
     * Get objEzsignsignergroup
     * @return objEzsignsignergroup
     */
    public EzsignsignergroupResponseCompound objEzsignsignergroup { get; set; }

    /**
     * Get objUser
     * @return objUser
     */
    public EzsignfoldersignerassociationRespons objUser { get; set; }

    /**
     * Get objEzsignsigner
     * @return objEzsignsigner
     */
    public EzsignsignerResponseCompound objEzsignsigner { get; set; }

    /**
     * Indicates if the Ezsignfoldersignerassociation has actionable elements in the current step
     * @return bEzsignfoldersignerassociationHasactionableelementsCurrent
     */
    public Boolean bEzsignfoldersignerassociationHasactionableelementsCurrent { get; set; }

    /**
     * Indicates if the Ezsignfoldersignerassociation has actionable elements in a future step
     * @return bEzsignfoldersignerassociationHasactionableelementsFuture
     */
    public Boolean bEzsignfoldersignerassociationHasactionableelementsFuture { get; set; }

    public static CustomEzsignfoldersignerassociationA getExample() {
        CustomEzsignfoldersignerassociationA customEzsignfoldersignerassociationActionableElementResponse = new CustomEzsignfoldersignerassociationA();
          customEzsignfoldersignerassociationActionableElementResponse.pkiEzsignfoldersignerassociationID = 20;
          customEzsignfoldersignerassociationActionableElementResponse.fkiEzsignfolderID = 33;
          customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationDelayedsend = true;
          customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationReceivecopy = true;
          customEzsignfoldersignerassociationActionableElementResponse.tEzsignfoldersignerassociationMessage = 'Hi John,\n\nThis is the document I need you to review.\n\nCould you sign it before Monday please.\n\nBest Regards.\n\nMary';
          customEzsignfoldersignerassociationActionableElementResponse.objEzsignsignergroup = EzsignsignergroupResponseCompound.getExample();
          customEzsignfoldersignerassociationActionableElementResponse.objUser = EzsignfoldersignerassociationRespons.getExample();
          customEzsignfoldersignerassociationActionableElementResponse.objEzsignsigner = EzsignsignerResponseCompound.getExample();
          customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationHasactionableelementsCurrent = true;
          customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationHasactionableelementsFuture = true;
        return customEzsignfoldersignerassociationActionableElementResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof CustomEzsignfoldersignerassociationA) {           
            CustomEzsignfoldersignerassociationA customEzsignfoldersignerassociationActionableElementResponse = (CustomEzsignfoldersignerassociationA) obj;
            return this.pkiEzsignfoldersignerassociationID == customEzsignfoldersignerassociationActionableElementResponse.pkiEzsignfoldersignerassociationID
                && this.fkiEzsignfolderID == customEzsignfoldersignerassociationActionableElementResponse.fkiEzsignfolderID
                && this.bEzsignfoldersignerassociationDelayedsend == customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationDelayedsend
                && this.bEzsignfoldersignerassociationReceivecopy == customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationReceivecopy
                && this.tEzsignfoldersignerassociationMessage == customEzsignfoldersignerassociationActionableElementResponse.tEzsignfoldersignerassociationMessage
                && this.objEzsignsignergroup == customEzsignfoldersignerassociationActionableElementResponse.objEzsignsignergroup
                && this.objUser == customEzsignfoldersignerassociationActionableElementResponse.objUser
                && this.objEzsignsigner == customEzsignfoldersignerassociationActionableElementResponse.objEzsignsigner
                && this.bEzsignfoldersignerassociationHasactionableelementsCurrent == customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationHasactionableelementsCurrent
                && this.bEzsignfoldersignerassociationHasactionableelementsFuture == customEzsignfoldersignerassociationActionableElementResponse.bEzsignfoldersignerassociationHasactionableelementsFuture;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsignfoldersignerassociationID == null ? 0 : System.hashCode(pkiEzsignfoldersignerassociationID));
        hashCode = (17 * hashCode) + (fkiEzsignfolderID == null ? 0 : System.hashCode(fkiEzsignfolderID));
        hashCode = (17 * hashCode) + (bEzsignfoldersignerassociationDelayedsend == null ? 0 : System.hashCode(bEzsignfoldersignerassociationDelayedsend));
        hashCode = (17 * hashCode) + (bEzsignfoldersignerassociationReceivecopy == null ? 0 : System.hashCode(bEzsignfoldersignerassociationReceivecopy));
        hashCode = (17 * hashCode) + (tEzsignfoldersignerassociationMessage == null ? 0 : System.hashCode(tEzsignfoldersignerassociationMessage));
        hashCode = (17 * hashCode) + (objEzsignsignergroup == null ? 0 : System.hashCode(objEzsignsignergroup));
        hashCode = (17 * hashCode) + (objUser == null ? 0 : System.hashCode(objUser));
        hashCode = (17 * hashCode) + (objEzsignsigner == null ? 0 : System.hashCode(objEzsignsigner));
        hashCode = (17 * hashCode) + (bEzsignfoldersignerassociationHasactionableelementsCurrent == null ? 0 : System.hashCode(bEzsignfoldersignerassociationHasactionableelementsCurrent));
        hashCode = (17 * hashCode) + (bEzsignfoldersignerassociationHasactionableelementsFuture == null ? 0 : System.hashCode(bEzsignfoldersignerassociationHasactionableelementsFuture));
        return hashCode;
    }
}

