/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectWebhookApi {
    Client client;

    public ObjectWebhookApi(Client client) {
        this.client = client;
    }

    public ObjectWebhookApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Webhook
     * The endpoint allows to create one or many elements at once.
     * @param webhookCreateObjectV1Request  (required)
     * @return WebhookCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookCreateObjectV1Response webhookCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('webhookCreateObjectV1Request'), 'webhookCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookCreateObjectV1Response) client.invoke(
            'POST', '/1/object/webhook',
            (WebhookCreateObjectV1Request) params.get('webhookCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            WebhookCreateObjectV1Response.class
        );
    }
    /**
     * Delete an existing Webhook
     * 
     * @param pkiWebhookID  (required)
     * @return WebhookDeleteObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookDeleteObjectV1Response webhookDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiWebhookID'), 'pkiWebhookID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookDeleteObjectV1Response) client.invoke(
            'DELETE', '/1/object/webhook/{pkiWebhookID}', '',
            query, form,
            new Map<String, Object>{
                'pkiWebhookID' => (Integer) params.get('pkiWebhookID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            WebhookDeleteObjectV1Response.class
        );
    }
    /**
     * Edit an existing Webhook
     * 
     * @param pkiWebhookID  (required)
     * @param webhookEditObjectV1Request  (required)
     * @return WebhookEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookEditObjectV1Response webhookEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiWebhookID'), 'pkiWebhookID');
        client.assertNotNull(params.get('webhookEditObjectV1Request'), 'webhookEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookEditObjectV1Response) client.invoke(
            'PUT', '/1/object/webhook/{pkiWebhookID}',
            (WebhookEditObjectV1Request) params.get('webhookEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiWebhookID' => (Integer) params.get('pkiWebhookID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            WebhookEditObjectV1Response.class
        );
    }
    /**
     * Retrieve the logs for recent Webhook calls
     * 
     * @param pkiWebhookID  (required)
     * @param eWebhookHistoryinterval The number of days to return (required)
     * @return WebhookGetHistoryV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookGetHistoryV1Response webhookGetHistoryV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiWebhookID'), 'pkiWebhookID');
        client.assertNotNull(params.get('eWebhookHistoryinterval'), 'eWebhookHistoryinterval');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eWebhookHistoryinterval', (String) params.get('eWebhookHistoryinterval')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookGetHistoryV1Response) client.invoke(
            'GET', '/1/object/webhook/{pkiWebhookID}/getHistory', '',
            query, form,
            new Map<String, Object>{
                'pkiWebhookID' => (Integer) params.get('pkiWebhookID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            WebhookGetHistoryV1Response.class
        );
    }
    /**
     * Retrieve Webhook list
     * Enum values that can be filtered in query parameter *sFilter*:\n\n| Variable | Valid values |\n|---|---|\n| eWebhookModule | Ezsign&lt;br&gt;Management |\n| eWebhookEzsignevent | DocumentCompleted&lt;br&gt;FolderCompleted |\n| eWebhookManagementevent | UserCreated |
     * @param eOrderBy Specify how you want the results to be sorted (optional)
     * @param iRowMax  (optional, default to 10000)
     * @param iRowOffset  (optional, default to 0)
     * @param acceptLanguage  (optional)
     * @param sFilter  (optional)
     * @return WebhookGetListV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookGetListV1Response webhookGetListV1(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('eOrderBy', (String) params.get('eOrderBy')));
        query.addAll(client.makeParam('iRowMax', (Integer) params.get('iRowMax')));
        query.addAll(client.makeParam('iRowOffset', (Integer) params.get('iRowOffset')));
        query.addAll(client.makeParam('sFilter', (String) params.get('sFilter')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookGetListV1Response) client.invoke(
            'GET', '/1/object/webhook/getList', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Accept-Language' => (HeaderAcceptLanguage) params.get('acceptLanguage')
            },
            new List<String>{ 'application/json', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
            new List<String>(),
            new List<String> { 'Authorization' },
            WebhookGetListV1Response.class
        );
    }
    /**
     * Retrieve an existing Webhook
     * 
     * @param pkiWebhookID  (required)
     * @return WebhookGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookGetObjectV2Response webhookGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiWebhookID'), 'pkiWebhookID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookGetObjectV2Response) client.invoke(
            'GET', '/2/object/webhook/{pkiWebhookID}', '',
            query, form,
            new Map<String, Object>{
                'pkiWebhookID' => (Integer) params.get('pkiWebhookID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            WebhookGetObjectV2Response.class
        );
    }
    /**
     * Test the Webhook by calling the Url
     * 
     * @param pkiWebhookID  (required)
     * @param body  (required)
     * @return WebhookTestV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public WebhookTestV1Response webhookTestV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiWebhookID'), 'pkiWebhookID');
        client.assertNotNull(params.get('body'), 'body');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (WebhookTestV1Response) client.invoke(
            'POST', '/1/object/webhook/{pkiWebhookID}/test',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'pkiWebhookID' => (Integer) params.get('pkiWebhookID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            WebhookTestV1Response.class
        );
    }
}
