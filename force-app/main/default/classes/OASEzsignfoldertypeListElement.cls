/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An Ezsignfoldertype List Element
 */
public class OASEzsignfoldertypeListElement {
    /**
     * The unique ID of the Ezsignfoldertype.
     * @return pkiEzsignfoldertypeID
     */
    public Integer pkiEzsignfoldertypeID { get; set; }

    /**
     * The name of the Ezsignfoldertype in the language of the requester
     * @return sEzsignfoldertypeNameX
     */
    public String sEzsignfoldertypeNameX { get; set; }

    public static OASEzsignfoldertypeListElement getExample() {
        OASEzsignfoldertypeListElement ezsignfoldertypeListElement = new OASEzsignfoldertypeListElement();
          ezsignfoldertypeListElement.pkiEzsignfoldertypeID = 5;
          ezsignfoldertypeListElement.sEzsignfoldertypeNameX = 'Default';
        return ezsignfoldertypeListElement;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignfoldertypeListElement) {           
            OASEzsignfoldertypeListElement ezsignfoldertypeListElement = (OASEzsignfoldertypeListElement) obj;
            return this.pkiEzsignfoldertypeID == ezsignfoldertypeListElement.pkiEzsignfoldertypeID
                && this.sEzsignfoldertypeNameX == ezsignfoldertypeListElement.sEzsignfoldertypeNameX;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsignfoldertypeID == null ? 0 : System.hashCode(pkiEzsignfoldertypeID));
        hashCode = (17 * hashCode) + (sEzsignfoldertypeNameX == null ? 0 : System.hashCode(sEzsignfoldertypeNameX));
        return hashCode;
    }
}

