/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Ezsignannotation Object
 */
public class EzsignannotationResponse {
    /**
     * The unique ID of the Ezsignannotation
     * @return pkiEzsignannotationID
     */
    public Integer pkiEzsignannotationID { get; set; }

    /**
     * The unique ID of the Ezsigndocument
     * minimum: 0
     * @return fkiEzsigndocumentID
     */
    public Integer fkiEzsigndocumentID { get; set; }

    /**
     * Get eEzsignannotationHorizontalalignment
     * @return eEzsignannotationHorizontalalignment
     */
    public EnumHorizontalalignment eEzsignannotationHorizontalalignment { get; set; }

    /**
     * Get eEzsignannotationVerticalalignment
     * @return eEzsignannotationVerticalalignment
     */
    public EnumVerticalalignment eEzsignannotationVerticalalignment { get; set; }

    /**
     * Get eEzsignannotationType
     * @return eEzsignannotationType
     */
    public FieldEEzsignannotationType eEzsignannotationType { get; set; }

    /**
     * The X coordinate (Horizontal) where to put the Ezsignannotation on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 2 inches from the left border of the page, you would use "200" for the X coordinate.
     * minimum: 0
     * @return iEzsignannotationX
     */
    public Integer iEzsignannotationX { get; set; }

    /**
     * The Y coordinate (Vertical) where to put the Ezsignannotation on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignannotation 3 inches from the top border of the page, you would use "300" for the Y coordinate.
     * minimum: 0
     * @return iEzsignannotationY
     */
    public Integer iEzsignannotationY { get; set; }

    /**
     * The Width of the Ezsignannotation.\n\nWidth is calculated at 100dpi (dot per inch). So for example, if you want to have the width of the Ezsignannotation to be 3 inches, you would use "300" for the Width.
     * minimum: 0
     * @return iEzsignannotationWidth
     */
    public Integer iEzsignannotationWidth { get; set; }

    /**
     * The Height of the Ezsignannotation.\n\nHeight is calculated at 100dpi (dot per inch). So for example, if you want to have the height of the Ezsignannotation to be 2 inches, you would use "200" for the Height.\n\nThis can only be set if eEzsignannotationType is **StrikethroughBlock** or **Text**
     * minimum: 0
     * @return iEzsignannotationHeight
     */
    public Integer iEzsignannotationHeight { get; set; }

    /**
     * The Text of the Ezsignannotation
     * @return sEzsignannotationText
     */
    public String sEzsignannotationText { get; set; }

    /**
     * The page number in the Ezsigndocument
     * minimum: 1
     * @return iEzsignpagePagenumber
     */
    public Integer iEzsignpagePagenumber { get; set; }

    public static EzsignannotationResponse getExample() {
        EzsignannotationResponse ezsignannotationResponse = new EzsignannotationResponse();
          ezsignannotationResponse.pkiEzsignannotationID = 113;
          ezsignannotationResponse.fkiEzsigndocumentID = 97;
          ezsignannotationResponse.eEzsignannotationHorizontalalignment = EnumHorizontalalignment.getExample();
          ezsignannotationResponse.eEzsignannotationVerticalalignment = EnumVerticalalignment.getExample();
          ezsignannotationResponse.eEzsignannotationType = FieldEEzsignannotationType.getExample();
          ezsignannotationResponse.iEzsignannotationX = 50;
          ezsignannotationResponse.iEzsignannotationY = 50;
          ezsignannotationResponse.iEzsignannotationWidth = 75;
          ezsignannotationResponse.iEzsignannotationHeight = 25;
          ezsignannotationResponse.sEzsignannotationText = 'Sample';
          ezsignannotationResponse.iEzsignpagePagenumber = 1;
        return ezsignannotationResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof EzsignannotationResponse) {           
            EzsignannotationResponse ezsignannotationResponse = (EzsignannotationResponse) obj;
            return this.pkiEzsignannotationID == ezsignannotationResponse.pkiEzsignannotationID
                && this.fkiEzsigndocumentID == ezsignannotationResponse.fkiEzsigndocumentID
                && this.eEzsignannotationHorizontalalignment == ezsignannotationResponse.eEzsignannotationHorizontalalignment
                && this.eEzsignannotationVerticalalignment == ezsignannotationResponse.eEzsignannotationVerticalalignment
                && this.eEzsignannotationType == ezsignannotationResponse.eEzsignannotationType
                && this.iEzsignannotationX == ezsignannotationResponse.iEzsignannotationX
                && this.iEzsignannotationY == ezsignannotationResponse.iEzsignannotationY
                && this.iEzsignannotationWidth == ezsignannotationResponse.iEzsignannotationWidth
                && this.iEzsignannotationHeight == ezsignannotationResponse.iEzsignannotationHeight
                && this.sEzsignannotationText == ezsignannotationResponse.sEzsignannotationText
                && this.iEzsignpagePagenumber == ezsignannotationResponse.iEzsignpagePagenumber;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsignannotationID == null ? 0 : System.hashCode(pkiEzsignannotationID));
        hashCode = (17 * hashCode) + (fkiEzsigndocumentID == null ? 0 : System.hashCode(fkiEzsigndocumentID));
        hashCode = (17 * hashCode) + (eEzsignannotationHorizontalalignment == null ? 0 : System.hashCode(eEzsignannotationHorizontalalignment));
        hashCode = (17 * hashCode) + (eEzsignannotationVerticalalignment == null ? 0 : System.hashCode(eEzsignannotationVerticalalignment));
        hashCode = (17 * hashCode) + (eEzsignannotationType == null ? 0 : System.hashCode(eEzsignannotationType));
        hashCode = (17 * hashCode) + (iEzsignannotationX == null ? 0 : System.hashCode(iEzsignannotationX));
        hashCode = (17 * hashCode) + (iEzsignannotationY == null ? 0 : System.hashCode(iEzsignannotationY));
        hashCode = (17 * hashCode) + (iEzsignannotationWidth == null ? 0 : System.hashCode(iEzsignannotationWidth));
        hashCode = (17 * hashCode) + (iEzsignannotationHeight == null ? 0 : System.hashCode(iEzsignannotationHeight));
        hashCode = (17 * hashCode) + (sEzsignannotationText == null ? 0 : System.hashCode(sEzsignannotationText));
        hashCode = (17 * hashCode) + (iEzsignpagePagenumber == null ? 0 : System.hashCode(iEzsignpagePagenumber));
        return hashCode;
    }
}

