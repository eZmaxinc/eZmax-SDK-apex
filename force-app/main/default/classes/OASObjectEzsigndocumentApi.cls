/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.47
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASObjectEzsigndocumentApi {
    OASClient client;

    public OASObjectEzsigndocumentApi(OASClient client) {
        this.client = client;
    }

    public OASObjectEzsigndocumentApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Apply an Ezsign Template to the Ezsigndocument.
     * This endpoint applies a predefined template to the ezsign document.\nThis allows to automatically apply all the form and signature fields on a document in a single step.\n\nThe document must not already have fields otherwise an error will be returned.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @param oaSEzsigndocumentApplyEzsigntemplate  (required)
     * @return OASEzsigndocumentApplyEzsigntemplate
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentApplyEzsigntemplate ezsigndocumentApplyEzsigntemplateV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        client.assertNotNull(params.get('oaSEzsigndocumentApplyEzsigntemplate'), 'oaSEzsigndocumentApplyEzsigntemplate');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentApplyEzsigntemplate) client.invoke(
            'POST', '/1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate',
            (OASEzsigndocumentApplyEzsigntemplate) params.get('oaSEzsigndocumentApplyEzsigntemplate'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASEzsigndocumentApplyEzsigntemplate.class
        );
    }
    /**
     * Create a new Ezsigndocument
     * The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects.
     * @param oaSEzsigndocumentCreateObjectV1Reque  (required)
     * @return OASEzsigndocumentCreateObjectV1Respo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentCreateObjectV1Respo ezsigndocumentCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSEzsigndocumentCreateObjectV1Reque'), 'oaSEzsigndocumentCreateObjectV1Reque');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentCreateObjectV1Respo) client.invoke(
            'POST', '/1/object/ezsigndocument',
            (List<OASEzsigndocumentCreateObjectV1Reque>) params.get('oaSEzsigndocumentCreateObjectV1Reque'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASEzsigndocumentCreateObjectV1Respo.class
        );
    }
    /**
     * Delete an existing Ezsigndocument
     * 
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @return OASEzsigndocumentDeleteObjectV1Respo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentDeleteObjectV1Respo ezsigndocumentDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentDeleteObjectV1Respo) client.invoke(
            'DELETE', '/1/object/ezsigndocument/{pkiEzsigndocumentID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASEzsigndocumentDeleteObjectV1Respo.class
        );
    }
    /**
     * Retrieve an existing Ezsigndocument\&#39;s children IDs
     * ## ⚠️EARLY ADOPTERS WARNING\n\n### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void ezsigndocumentGetChildrenV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getChildren', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            null
        );
    }
    /**
     * Retrieve a URL to download documents.
     * This endpoint returns URLs to different files that can be downloaded during the signing process.\n\nThese links will expire after 5 minutes so the download of the file should be made soon after retrieving the link.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @param eDocumentType The type of document to retrieve.\n\n1. **Initial** Is the initial document before any signature were applied.\n2. **Signed** Is the final document once all signatures were applied.\n3. **Proofdocument** Is the evidence report.\n4. **Proof** Is the complete evidence archive including all of the above and more.\n (required)
     * @return OASEzsigndocumentGetDownloadUrlV1Res
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentGetDownloadUrlV1Res ezsigndocumentGetDownloadUrlV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        client.assertNotNull(params.get('eDocumentType'), 'eDocumentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentGetDownloadUrlV1Res) client.invoke(
            'GET', '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID'),
                'eDocumentType' => (String) params.get('eDocumentType')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASEzsigndocumentGetDownloadUrlV1Res.class
        );
    }
    /**
     * Retrieve an existing Ezsigndocument\&#39;s Form Data
     * ## ⚠️EARLY ADOPTERS WARNING\n\n### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob ezsigndocumentGetFormDataV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getFormData', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/zip', 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            Blob.class
        );
    }
    /**
     * Retrieve an existing Ezsigndocument
     * ## ⚠️EARLY ADOPTERS WARNING\n\n### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @return OASEzsigndocumentGetObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentGetObjectV1Response ezsigndocumentGetObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentGetObjectV1Response) client.invoke(
            'GET', '/1/object/ezsigndocument/{pkiEzsigndocumentID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASEzsigndocumentGetObjectV1Response.class
        );
    }
    /**
     * Retrieve positions X,Y of given words from a Ezsigndocument
     * ## ⚠️EARLY ADOPTERS WARNING\n\n### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
     * @param pkiEzsigndocumentID The unique ID of the Ezsigndocument (required)
     * @param oaSEzsigndocumentGetWordsPositionsV1  (required)
     * @return OASEzsigndocumentGetWordsPositionsV1
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEzsigndocumentGetWordsPositionsV1 ezsigndocumentGetWordsPositionsV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsigndocumentID'), 'pkiEzsigndocumentID');
        client.assertNotNull(params.get('oaSEzsigndocumentGetWordsPositionsV1'), 'oaSEzsigndocumentGetWordsPositionsV1');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEzsigndocumentGetWordsPositionsV1) client.invoke(
            'POST', '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions',
            (OASEzsigndocumentGetWordsPositionsV1) params.get('oaSEzsigndocumentGetWordsPositionsV1'),
            query, form,
            new Map<String, Object>{
                'pkiEzsigndocumentID' => (Integer) params.get('pkiEzsigndocumentID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASEzsigndocumentGetWordsPositionsV1.class
        );
    }
}
