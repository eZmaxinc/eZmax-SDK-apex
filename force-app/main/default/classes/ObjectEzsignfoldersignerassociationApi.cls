/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectEzsignfoldersignerassociationApi {
    Client client;

    public ObjectEzsignfoldersignerassociationApi(Client client) {
        this.client = client;
    }

    public ObjectEzsignfoldersignerassociationApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Ezsignfoldersignerassociation
     * The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects.
     * @param ezsignfoldersignerassociationCreateO  (required)
     * @return EzsignfoldersignerassociationCreateO
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationCreateO ezsignfoldersignerassociationCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsignfoldersignerassociationCreateO'), 'ezsignfoldersignerassociationCreateO');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationCreateO) client.invoke(
            'POST', '/1/object/ezsignfoldersignerassociation',
            (List<EzsignfoldersignerassociationCreateO>) params.get('ezsignfoldersignerassociationCreateO'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationCreateO.class
        );
    }
    /**
     * Create a new Ezsignfoldersignerassociation
     * The endpoint allows to create one or many elements at once.
     * @param ezsignfoldersignerassociationCreateO  (required)
     * @return EzsignfoldersignerassociationCreateO
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationCreateO ezsignfoldersignerassociationCreateObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsignfoldersignerassociationCreateO'), 'ezsignfoldersignerassociationCreateO');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationCreateO) client.invoke(
            'POST', '/2/object/ezsignfoldersignerassociation',
            (EzsignfoldersignerassociationCreateO) params.get('ezsignfoldersignerassociationCreateO'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationCreateO.class
        );
    }
    /**
     * Delete an existing Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @return EzsignfoldersignerassociationDeleteO
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationDeleteO ezsignfoldersignerassociationDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationDeleteO) client.invoke(
            'DELETE', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationDeleteO.class
        );
    }
    /**
     * Edit an existing Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @param ezsignfoldersignerassociationEditObj  (required)
     * @return EzsignfoldersignerassociationEditObj
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationEditObj ezsignfoldersignerassociationEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        client.assertNotNull(params.get('ezsignfoldersignerassociationEditObj'), 'ezsignfoldersignerassociationEditObj');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationEditObj) client.invoke(
            'PUT', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}',
            (EzsignfoldersignerassociationEditObj) params.get('ezsignfoldersignerassociationEditObj'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationEditObj.class
        );
    }
    /**
     * Disconnects the Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @param body  (required)
     * @return EzsignfoldersignerassociationForceDi
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationForceDi ezsignfoldersignerassociationForceDisconnectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        client.assertNotNull(params.get('body'), 'body');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationForceDi) client.invoke(
            'POST', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/forceDisconnect',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationForceDi.class
        );
    }
    /**
     * Retrieve a Login Url to allow In-Person signing
     * This endpoint returns a Login Url that can be used in a browser or embedded in an I-Frame to allow in person signing.\n\nThe signer Login type must be configured as In-Person.
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @return EzsignfoldersignerassociationGetInPe
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationGetInPe ezsignfoldersignerassociationGetInPersonLoginUrlV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationGetInPe) client.invoke(
            'GET', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getInPersonLoginUrl', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationGetInPe.class
        );
    }
    /**
     * Retrieve an existing Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @return EzsignfoldersignerassociationGetObje
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationGetObje ezsignfoldersignerassociationGetObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationGetObje) client.invoke(
            'GET', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationGetObje.class
        );
    }
    /**
     * Retrieve an existing Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @return EzsignfoldersignerassociationGetObje
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationGetObje ezsignfoldersignerassociationGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationGetObje) client.invoke(
            'GET', '/2/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationGetObje.class
        );
    }
    /**
     * Patch an existing Ezsignfoldersignerassociation
     * 
     * @param pkiEzsignfoldersignerassociationID  (required)
     * @param ezsignfoldersignerassociationPatchOb  (required)
     * @return EzsignfoldersignerassociationPatchOb
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignfoldersignerassociationPatchOb ezsignfoldersignerassociationPatchObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignfoldersignerassociationID'), 'pkiEzsignfoldersignerassociationID');
        client.assertNotNull(params.get('ezsignfoldersignerassociationPatchOb'), 'ezsignfoldersignerassociationPatchOb');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignfoldersignerassociationPatchOb) client.invoke(
            'PATCH', '/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}',
            (EzsignfoldersignerassociationPatchOb) params.get('ezsignfoldersignerassociationPatchOb'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignfoldersignerassociationID' => (Integer) params.get('pkiEzsignfoldersignerassociationID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignfoldersignerassociationPatchOb.class
        );
    }
}
