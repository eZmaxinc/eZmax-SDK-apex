/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Request for POST /2/object/ezsignsignature
 */
public class EzsignsignatureCreateObjectV2Request implements OAS.MappedProperties {
    /**
     * Get aObjEzsignsignature
     * @return aObjEzsignsignature
     */
    public List<EzsignsignatureRequestCompound> aObjEzsignsignature { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_objEzsignsignature' => 'aObjEzsignsignature'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public EzsignsignatureCreateObjectV2Request() {
        aObjEzsignsignature = new List<EzsignsignatureRequestCompound>();
    }

    public static EzsignsignatureCreateObjectV2Request getExample() {
        EzsignsignatureCreateObjectV2Request ezsignsignatureCreateObjectV2Request = new EzsignsignatureCreateObjectV2Request();
          ezsignsignatureCreateObjectV2Request.aObjEzsignsignature = new List<EzsignsignatureRequestCompound>{EzsignsignatureRequestCompound.getExample()};
        return ezsignsignatureCreateObjectV2Request;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof EzsignsignatureCreateObjectV2Request) {           
            EzsignsignatureCreateObjectV2Request ezsignsignatureCreateObjectV2Request = (EzsignsignatureCreateObjectV2Request) obj;
            return this.aObjEzsignsignature == ezsignsignatureCreateObjectV2Request.aObjEzsignsignature;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (aObjEzsignsignature == null ? 0 : System.hashCode(aObjEzsignsignature));
        return hashCode;
    }
}

