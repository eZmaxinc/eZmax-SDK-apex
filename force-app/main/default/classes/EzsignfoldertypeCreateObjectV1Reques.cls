/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Request for POST /1/object/ezsignfoldertype
 */
public class EzsignfoldertypeCreateObjectV1Reques implements OAS.MappedProperties {
    /**
     * Get aObjEzsignfoldertype
     * @return aObjEzsignfoldertype
     */
    public List<EzsignfoldertypeRequestCompound> aObjEzsignfoldertype { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'a_objEzsignfoldertype' => 'aObjEzsignfoldertype'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public EzsignfoldertypeCreateObjectV1Reques() {
        aObjEzsignfoldertype = new List<EzsignfoldertypeRequestCompound>();
    }

    public static EzsignfoldertypeCreateObjectV1Reques getExample() {
        EzsignfoldertypeCreateObjectV1Reques ezsignfoldertypeCreateObjectV1Request = new EzsignfoldertypeCreateObjectV1Reques();
          ezsignfoldertypeCreateObjectV1Request.aObjEzsignfoldertype = new List<EzsignfoldertypeRequestCompound>{EzsignfoldertypeRequestCompound.getExample()};
        return ezsignfoldertypeCreateObjectV1Request;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof EzsignfoldertypeCreateObjectV1Reques) {           
            EzsignfoldertypeCreateObjectV1Reques ezsignfoldertypeCreateObjectV1Request = (EzsignfoldertypeCreateObjectV1Reques) obj;
            return this.aObjEzsignfoldertype == ezsignfoldertypeCreateObjectV1Request.aObjEzsignfoldertype;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (aObjEzsignfoldertype == null ? 0 : System.hashCode(aObjEzsignfoldertype));
        return hashCode;
    }
}

