/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.12
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Contact Object and children to create a complete structure
 */
public class OASContactRequestCompound implements OASContactRequest, OASContactRequestCompoundAllOf {
    /**
     * The unique ID of the Contacttitle.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Ms.|\n|2|Mr.|\n|4|(Blank)|\n|5|Me (For Notaries)|
     * minimum: 0
     * @return fkiContacttitleID
     */
    public Integer fkiContacttitleID { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The First name of the contact
     * @return sContactFirstname
     */
    public String sContactFirstname { get; set; }

    /**
     * The Last name of the contact
     * @return sContactLastname
     */
    public String sContactLastname { get; set; }

    /**
     * The Company name of the contact
     * @return sContactCompany
     */
    public String sContactCompany { get; set; }

    /**
     * The Birth Date of the contact
     * @return dtContactBirthdate
     */
    public String dtContactBirthdate { get; set; }

    /**
     * Get objContactinformations
     * @return objContactinformations
     */
    public OASContactinformationsRequestCompoun objContactinformations { get; set; }

    public static OASContactRequestCompound getExample() {
        OASContactRequestCompound contactRequestCompound = new OASContactRequestCompound();
          contactRequestCompound.fkiContacttitleID = 2;
          contactRequestCompound.fkiLanguageID = 2;
          contactRequestCompound.sContactFirstname = 'John';
          contactRequestCompound.sContactLastname = 'Doe';
          contactRequestCompound.sContactCompany = 'eZmax Solutions Inc.';
          contactRequestCompound.dtContactBirthdate = '1980-01-01';
          contactRequestCompound.objContactinformations = OASContactinformationsRequestCompoun.getExample();
        return contactRequestCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASContactRequestCompound) {           
            OASContactRequestCompound contactRequestCompound = (OASContactRequestCompound) obj;
            return this.fkiContacttitleID == contactRequestCompound.fkiContacttitleID
                && this.fkiLanguageID == contactRequestCompound.fkiLanguageID
                && this.sContactFirstname == contactRequestCompound.sContactFirstname
                && this.sContactLastname == contactRequestCompound.sContactLastname
                && this.sContactCompany == contactRequestCompound.sContactCompany
                && this.dtContactBirthdate == contactRequestCompound.dtContactBirthdate
                && this.objContactinformations == contactRequestCompound.objContactinformations;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiContacttitleID == null ? 0 : System.hashCode(fkiContacttitleID));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sContactFirstname == null ? 0 : System.hashCode(sContactFirstname));
        hashCode = (17 * hashCode) + (sContactLastname == null ? 0 : System.hashCode(sContactLastname));
        hashCode = (17 * hashCode) + (sContactCompany == null ? 0 : System.hashCode(sContactCompany));
        hashCode = (17 * hashCode) + (dtContactBirthdate == null ? 0 : System.hashCode(dtContactBirthdate));
        hashCode = (17 * hashCode) + (objContactinformations == null ? 0 : System.hashCode(objContactinformations));
        return hashCode;
    }
}

