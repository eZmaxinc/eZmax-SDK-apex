/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An Ezsignsignature Object and children to create a complete structure
 */
public class OASEzsignsignatureRequestCompound implements OASEzsignsignatureRequest {
    /**
     * The unique ID of the Ezsignfoldersignerassociation
     * @return fkiEzsignfoldersignerassociationID
     */
    public Integer fkiEzsignfoldersignerassociationID { get; set; }

    /**
     * The page number in the document where to apply the signature
     * @return iEzsignpagePagenumber
     */
    public Integer iEzsignpagePagenumber { get; set; }

    /**
     * The X coordinate (Horizontal) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 2 inches from the left border of the page, you would use "200" for the X coordinate.
     * @return iEzsignsignatureX
     */
    public Integer iEzsignsignatureX { get; set; }

    /**
     * The Y coordinate (Vertical) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 3 inches from the top border of the page, you would use "300" for the Y coordinate.
     * @return iEzsignsignatureY
     */
    public Integer iEzsignsignatureY { get; set; }

    /**
     * The step when the Ezsignsigner will be invited to sign.
     * @return iEzsignsignatureStep
     */
    public Integer iEzsignsignatureStep { get; set; }

    /**
     * Get eEzsignsignatureType
     * @return eEzsignsignatureType
     */
    public OASFieldEEzsignsignatureType eEzsignsignatureType { get; set; }

    /**
     * The unique ID of the Ezsigntemplate
     * @return fkiEzsigndocumentID
     */
    public Integer fkiEzsigndocumentID { get; set; }

    public static OASEzsignsignatureRequestCompound getExample() {
        OASEzsignsignatureRequestCompound ezsignsignatureRequestCompound = new OASEzsignsignatureRequestCompound();
          ezsignsignatureRequestCompound.fkiEzsignfoldersignerassociationID = 20;
          ezsignsignatureRequestCompound.iEzsignpagePagenumber = 1;
          ezsignsignatureRequestCompound.iEzsignsignatureX = 200;
          ezsignsignatureRequestCompound.iEzsignsignatureY = 300;
          ezsignsignatureRequestCompound.iEzsignsignatureStep = 1;
          ezsignsignatureRequestCompound.eEzsignsignatureType = OASFieldEEzsignsignatureType.getExample();
          ezsignsignatureRequestCompound.fkiEzsigndocumentID = 97;
        return ezsignsignatureRequestCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignsignatureRequestCompound) {           
            OASEzsignsignatureRequestCompound ezsignsignatureRequestCompound = (OASEzsignsignatureRequestCompound) obj;
            return this.fkiEzsignfoldersignerassociationID == ezsignsignatureRequestCompound.fkiEzsignfoldersignerassociationID
                && this.iEzsignpagePagenumber == ezsignsignatureRequestCompound.iEzsignpagePagenumber
                && this.iEzsignsignatureX == ezsignsignatureRequestCompound.iEzsignsignatureX
                && this.iEzsignsignatureY == ezsignsignatureRequestCompound.iEzsignsignatureY
                && this.iEzsignsignatureStep == ezsignsignatureRequestCompound.iEzsignsignatureStep
                && this.eEzsignsignatureType == ezsignsignatureRequestCompound.eEzsignsignatureType
                && this.fkiEzsigndocumentID == ezsignsignatureRequestCompound.fkiEzsigndocumentID;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiEzsignfoldersignerassociationID == null ? 0 : System.hashCode(fkiEzsignfoldersignerassociationID));
        hashCode = (17 * hashCode) + (iEzsignpagePagenumber == null ? 0 : System.hashCode(iEzsignpagePagenumber));
        hashCode = (17 * hashCode) + (iEzsignsignatureX == null ? 0 : System.hashCode(iEzsignsignatureX));
        hashCode = (17 * hashCode) + (iEzsignsignatureY == null ? 0 : System.hashCode(iEzsignsignatureY));
        hashCode = (17 * hashCode) + (iEzsignsignatureStep == null ? 0 : System.hashCode(iEzsignsignatureStep));
        hashCode = (17 * hashCode) + (eEzsignsignatureType == null ? 0 : System.hashCode(eEzsignsignatureType));
        hashCode = (17 * hashCode) + (fkiEzsigndocumentID == null ? 0 : System.hashCode(fkiEzsigndocumentID));
        return hashCode;
    }
}

