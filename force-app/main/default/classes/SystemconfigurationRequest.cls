/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Systemconfiguration Object
 */
public class SystemconfigurationRequest {
    /**
     * The unique ID of the Systemconfiguration
     * minimum: 1
     * maximum: 1
     * @return pkiSystemconfigurationID
     */
    public Integer pkiSystemconfigurationID { get; set; }

    /**
     * Get eSystemconfigurationNewexternaluseraction
     * @return eSystemconfigurationNewexternaluseraction
     */
    public FieldESystemconfigurationNewexternal eSystemconfigurationNewexternaluseraction { get; set; }

    /**
     * Get eSystemconfigurationLanguage1
     * @return eSystemconfigurationLanguage1
     */
    public FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1 { get; set; }

    /**
     * Get eSystemconfigurationLanguage2
     * @return eSystemconfigurationLanguage2
     */
    public FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2 { get; set; }

    /**
     * Get eSystemconfigurationEzsign
     * @return eSystemconfigurationEzsign
     */
    public FieldESystemconfigurationEzsign eSystemconfigurationEzsign { get; set; }

    /**
     * Whether if we allow the creation of personal files in eZsign
     * @return bSystemconfigurationEzsignpersonnal
     */
    public Boolean bSystemconfigurationEzsignpersonnal { get; set; }

    /**
     * Whether if we allow SSPR
     * @return bSystemconfigurationSspr
     */
    public Boolean bSystemconfigurationSspr { get; set; }

    /**
     * The start date where the system will be in read only
     * @return dtSystemconfigurationReadonlyexpirationstart
     */
    public String dtSystemconfigurationReadonlyexpirationstart { get; set; }

    /**
     * The end date where the system will be in read only
     * @return dtSystemconfigurationReadonlyexpirationend
     */
    public String dtSystemconfigurationReadonlyexpirationend { get; set; }

    public static SystemconfigurationRequest getExample() {
        SystemconfigurationRequest systemconfigurationRequest = new SystemconfigurationRequest();
          systemconfigurationRequest.pkiSystemconfigurationID = 1;
          systemconfigurationRequest.eSystemconfigurationNewexternaluseraction = FieldESystemconfigurationNewexternal.getExample();
          systemconfigurationRequest.eSystemconfigurationLanguage1 = FieldESystemconfigurationLanguage1.getExample();
          systemconfigurationRequest.eSystemconfigurationLanguage2 = FieldESystemconfigurationLanguage2.getExample();
          systemconfigurationRequest.eSystemconfigurationEzsign = FieldESystemconfigurationEzsign.getExample();
          systemconfigurationRequest.bSystemconfigurationEzsignpersonnal = true;
          systemconfigurationRequest.bSystemconfigurationSspr = true;
          systemconfigurationRequest.dtSystemconfigurationReadonlyexpirationstart = '2020-12-31';
          systemconfigurationRequest.dtSystemconfigurationReadonlyexpirationend = '2021-12-31';
        return systemconfigurationRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SystemconfigurationRequest) {           
            SystemconfigurationRequest systemconfigurationRequest = (SystemconfigurationRequest) obj;
            return this.pkiSystemconfigurationID == systemconfigurationRequest.pkiSystemconfigurationID
                && this.eSystemconfigurationNewexternaluseraction == systemconfigurationRequest.eSystemconfigurationNewexternaluseraction
                && this.eSystemconfigurationLanguage1 == systemconfigurationRequest.eSystemconfigurationLanguage1
                && this.eSystemconfigurationLanguage2 == systemconfigurationRequest.eSystemconfigurationLanguage2
                && this.eSystemconfigurationEzsign == systemconfigurationRequest.eSystemconfigurationEzsign
                && this.bSystemconfigurationEzsignpersonnal == systemconfigurationRequest.bSystemconfigurationEzsignpersonnal
                && this.bSystemconfigurationSspr == systemconfigurationRequest.bSystemconfigurationSspr
                && this.dtSystemconfigurationReadonlyexpirationstart == systemconfigurationRequest.dtSystemconfigurationReadonlyexpirationstart
                && this.dtSystemconfigurationReadonlyexpirationend == systemconfigurationRequest.dtSystemconfigurationReadonlyexpirationend;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiSystemconfigurationID == null ? 0 : System.hashCode(pkiSystemconfigurationID));
        hashCode = (17 * hashCode) + (eSystemconfigurationNewexternaluseraction == null ? 0 : System.hashCode(eSystemconfigurationNewexternaluseraction));
        hashCode = (17 * hashCode) + (eSystemconfigurationLanguage1 == null ? 0 : System.hashCode(eSystemconfigurationLanguage1));
        hashCode = (17 * hashCode) + (eSystemconfigurationLanguage2 == null ? 0 : System.hashCode(eSystemconfigurationLanguage2));
        hashCode = (17 * hashCode) + (eSystemconfigurationEzsign == null ? 0 : System.hashCode(eSystemconfigurationEzsign));
        hashCode = (17 * hashCode) + (bSystemconfigurationEzsignpersonnal == null ? 0 : System.hashCode(bSystemconfigurationEzsignpersonnal));
        hashCode = (17 * hashCode) + (bSystemconfigurationSspr == null ? 0 : System.hashCode(bSystemconfigurationSspr));
        hashCode = (17 * hashCode) + (dtSystemconfigurationReadonlyexpirationstart == null ? 0 : System.hashCode(dtSystemconfigurationReadonlyexpirationstart));
        hashCode = (17 * hashCode) + (dtSystemconfigurationReadonlyexpirationend == null ? 0 : System.hashCode(dtSystemconfigurationReadonlyexpirationend));
        return hashCode;
    }
}

