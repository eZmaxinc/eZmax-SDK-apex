/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An Ezsignpage Object and children to create a complete structure
 */
public class OASEzsignpageResponseCompound implements OASEzsignpageResponse {
    /**
     * The unique ID of the Ezsignpage
     * minimum: 0
     * @return pkiEzsignpageID
     */
    public Integer pkiEzsignpageID { get; set; }

    /**
     * The Width of the page\'s image in pixels calculated at 100 DPI
     * minimum: 0
     * @return iEzsignpageWidthimage
     */
    public Integer iEzsignpageWidthimage { get; set; }

    /**
     * The Height of the page\'s image in pixels calculated at 100 DPI
     * minimum: 0
     * @return iEzsignpageHeightimage
     */
    public Integer iEzsignpageHeightimage { get; set; }

    /**
     * The Width of the page in points calculated at 72 DPI
     * minimum: 0
     * @return iEzsignpageWidthpdf
     */
    public Integer iEzsignpageWidthpdf { get; set; }

    /**
     * The Height of the page in points calculated at 72 DPI
     * minimum: 0
     * @return iEzsignpageHeightpdf
     */
    public Integer iEzsignpageHeightpdf { get; set; }

    /**
     * The page number in the Ezsigndocument
     * minimum: 1
     * @return iEzsignpagePagenumber
     */
    public Integer iEzsignpagePagenumber { get; set; }

    /**
     * The Url to the Ezsignpage\'s rasterized image.\n\nUrl will expire after 5 minutes.
     * @return sComputedImageurl
     */
    public String sComputedImageurl { get; set; }

    public static OASEzsignpageResponseCompound getExample() {
        OASEzsignpageResponseCompound ezsignpageResponseCompound = new OASEzsignpageResponseCompound();
          ezsignpageResponseCompound.pkiEzsignpageID = 64;
          ezsignpageResponseCompound.iEzsignpageWidthimage = 850;
          ezsignpageResponseCompound.iEzsignpageHeightimage = 1100;
          ezsignpageResponseCompound.iEzsignpageWidthpdf = 612;
          ezsignpageResponseCompound.iEzsignpageHeightpdf = 792;
          ezsignpageResponseCompound.iEzsignpagePagenumber = 1;
          ezsignpageResponseCompound.sComputedImageurl = '';
        return ezsignpageResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsignpageResponseCompound) {           
            OASEzsignpageResponseCompound ezsignpageResponseCompound = (OASEzsignpageResponseCompound) obj;
            return this.pkiEzsignpageID == ezsignpageResponseCompound.pkiEzsignpageID
                && this.iEzsignpageWidthimage == ezsignpageResponseCompound.iEzsignpageWidthimage
                && this.iEzsignpageHeightimage == ezsignpageResponseCompound.iEzsignpageHeightimage
                && this.iEzsignpageWidthpdf == ezsignpageResponseCompound.iEzsignpageWidthpdf
                && this.iEzsignpageHeightpdf == ezsignpageResponseCompound.iEzsignpageHeightpdf
                && this.iEzsignpagePagenumber == ezsignpageResponseCompound.iEzsignpagePagenumber
                && this.sComputedImageurl == ezsignpageResponseCompound.sComputedImageurl;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsignpageID == null ? 0 : System.hashCode(pkiEzsignpageID));
        hashCode = (17 * hashCode) + (iEzsignpageWidthimage == null ? 0 : System.hashCode(iEzsignpageWidthimage));
        hashCode = (17 * hashCode) + (iEzsignpageHeightimage == null ? 0 : System.hashCode(iEzsignpageHeightimage));
        hashCode = (17 * hashCode) + (iEzsignpageWidthpdf == null ? 0 : System.hashCode(iEzsignpageWidthpdf));
        hashCode = (17 * hashCode) + (iEzsignpageHeightpdf == null ? 0 : System.hashCode(iEzsignpageHeightpdf));
        hashCode = (17 * hashCode) + (iEzsignpagePagenumber == null ? 0 : System.hashCode(iEzsignpagePagenumber));
        hashCode = (17 * hashCode) + (sComputedImageurl == null ? 0 : System.hashCode(sComputedImageurl));
        return hashCode;
    }
}

