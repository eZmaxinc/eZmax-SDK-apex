/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCustomEzmaxinvoicingEzsignfolderR
 */
public class OASCustomEzmaxinvoicingEzsignfolderR {
    /**
     * The unique ID of the Ezsignfolder
     * minimum: 0
     * @return fkiEzsignfolderID
     */
    public Integer fkiEzsignfolderID { get; set; }

    /**
     * The description of the Ezsignfolder
     * @return sEzsignfolderDescription
     */
    public String sEzsignfolderDescription { get; set; }

    /**
     * Whether the TSA requirement is billable or not
     * @return bEzsigntsarequirementBillable
     */
    public Boolean bEzsigntsarequirementBillable { get; set; }

    /**
     * Whether the MFA was used or not for the Ezsignfolder
     * @return bEzsignfolderMfaused
     */
    public Boolean bEzsignfolderMfaused { get; set; }

    /**
     * Whether there was a signature is of type payment
     * @return bEzsignfolderPaymentused
     */
    public Boolean bEzsignfolderPaymentused { get; set; }

    /**
     * Get bEzsignfolderAllowed
     * @return bEzsignfolderAllowed
     */
    public Boolean bEzsignfolderAllowed { get; set; }

    public static OASCustomEzmaxinvoicingEzsignfolderR getExample() {
        OASCustomEzmaxinvoicingEzsignfolderR customEzmaxinvoicingEzsignfolderResponseAllOf = new OASCustomEzmaxinvoicingEzsignfolderR();
          customEzmaxinvoicingEzsignfolderResponseAllOf.fkiEzsignfolderID = 33;
          customEzmaxinvoicingEzsignfolderResponseAllOf.sEzsignfolderDescription = 'Test eZsign Folder';
          customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsigntsarequirementBillable = true;
          customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderMfaused = true;
          customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderPaymentused = true;
          customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderAllowed = true;
        return customEzmaxinvoicingEzsignfolderResponseAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCustomEzmaxinvoicingEzsignfolderR) {           
            OASCustomEzmaxinvoicingEzsignfolderR customEzmaxinvoicingEzsignfolderResponseAllOf = (OASCustomEzmaxinvoicingEzsignfolderR) obj;
            return this.fkiEzsignfolderID == customEzmaxinvoicingEzsignfolderResponseAllOf.fkiEzsignfolderID
                && this.sEzsignfolderDescription == customEzmaxinvoicingEzsignfolderResponseAllOf.sEzsignfolderDescription
                && this.bEzsigntsarequirementBillable == customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsigntsarequirementBillable
                && this.bEzsignfolderMfaused == customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderMfaused
                && this.bEzsignfolderPaymentused == customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderPaymentused
                && this.bEzsignfolderAllowed == customEzmaxinvoicingEzsignfolderResponseAllOf.bEzsignfolderAllowed;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiEzsignfolderID == null ? 0 : System.hashCode(fkiEzsignfolderID));
        hashCode = (17 * hashCode) + (sEzsignfolderDescription == null ? 0 : System.hashCode(sEzsignfolderDescription));
        hashCode = (17 * hashCode) + (bEzsigntsarequirementBillable == null ? 0 : System.hashCode(bEzsigntsarequirementBillable));
        hashCode = (17 * hashCode) + (bEzsignfolderMfaused == null ? 0 : System.hashCode(bEzsignfolderMfaused));
        hashCode = (17 * hashCode) + (bEzsignfolderPaymentused == null ? 0 : System.hashCode(bEzsignfolderPaymentused));
        hashCode = (17 * hashCode) + (bEzsignfolderAllowed == null ? 0 : System.hashCode(bEzsignfolderAllowed));
        return hashCode;
    }
}

