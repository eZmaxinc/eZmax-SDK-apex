/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASObjectSubnetApi {
    OASClient client;

    public OASObjectSubnetApi(OASClient client) {
        this.client = client;
    }

    public OASObjectSubnetApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new Subnet
     * The endpoint allows to create one or many elements at once.
     * @param oaSSubnetCreateObjectV1Request  (required)
     * @return OASSubnetCreateObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSubnetCreateObjectV1Response subnetCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSSubnetCreateObjectV1Request'), 'oaSSubnetCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSubnetCreateObjectV1Response) client.invoke(
            'POST', '/1/object/subnet',
            (OASSubnetCreateObjectV1Request) params.get('oaSSubnetCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASSubnetCreateObjectV1Response.class
        );
    }
    /**
     * Delete an existing Subnet
     * 
     * @param pkiSubnetID The unique ID of the Subnet (required)
     * @return OASSubnetDeleteObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSubnetDeleteObjectV1Response subnetDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiSubnetID'), 'pkiSubnetID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSubnetDeleteObjectV1Response) client.invoke(
            'DELETE', '/1/object/subnet/{pkiSubnetID}', '',
            query, form,
            new Map<String, Object>{
                'pkiSubnetID' => (Integer) params.get('pkiSubnetID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASSubnetDeleteObjectV1Response.class
        );
    }
    /**
     * Edit an existing Subnet
     * 
     * @param pkiSubnetID The unique ID of the Subnet (required)
     * @param oaSSubnetEditObjectV1Request  (required)
     * @return OASSubnetEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSubnetEditObjectV1Response subnetEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiSubnetID'), 'pkiSubnetID');
        client.assertNotNull(params.get('oaSSubnetEditObjectV1Request'), 'oaSSubnetEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSubnetEditObjectV1Response) client.invoke(
            'PUT', '/1/object/subnet/{pkiSubnetID}',
            (OASSubnetEditObjectV1Request) params.get('oaSSubnetEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiSubnetID' => (Integer) params.get('pkiSubnetID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            OASSubnetEditObjectV1Response.class
        );
    }
    /**
     * Retrieve an existing Subnet
     * 
     * @param pkiSubnetID The unique ID of the Subnet (required)
     * @return OASSubnetGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSubnetGetObjectV2Response subnetGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiSubnetID'), 'pkiSubnetID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSubnetGetObjectV2Response) client.invoke(
            'GET', '/2/object/subnet/{pkiSubnetID}', '',
            query, form,
            new Map<String, Object>{
                'pkiSubnetID' => (Integer) params.get('pkiSubnetID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            OASSubnetGetObjectV2Response.class
        );
    }
}
