/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.7
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Ezsigntemplatepackage Object
 */
public class OASEzsigntemplatepackageRequest {
    /**
     * The unique ID of the Ezsigntemplatepackage
     * @return pkiEzsigntemplatepackageID
     */
    public Integer pkiEzsigntemplatepackageID { get; set; }

    /**
     * The unique ID of the Ezsignfoldertype.
     * @return fkiEzsignfoldertypeID
     */
    public Integer fkiEzsignfoldertypeID { get; set; }

    /**
     * The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|
     * minimum: 1
     * maximum: 2
     * @return fkiLanguageID
     */
    public Integer fkiLanguageID { get; set; }

    /**
     * The description of the Ezsigntemplatepackage
     * @return sEzsigntemplatepackageDescription
     */
    public String sEzsigntemplatepackageDescription { get; set; }

    /**
     * Whether the Ezsigntemplatepackage can be accessed by admin users only (eUserType=Normal)
     * @return bEzsigntemplatepackageAdminonly
     */
    public Boolean bEzsigntemplatepackageAdminonly { get; set; }

    /**
     * Whether the Ezsigntemplatepackage is active or not
     * @return bEzsigntemplatepackageIsactive
     */
    public Boolean bEzsigntemplatepackageIsactive { get; set; }

    public static OASEzsigntemplatepackageRequest getExample() {
        OASEzsigntemplatepackageRequest ezsigntemplatepackageRequest = new OASEzsigntemplatepackageRequest();
          ezsigntemplatepackageRequest.pkiEzsigntemplatepackageID = 99;
          ezsigntemplatepackageRequest.fkiEzsignfoldertypeID = 5;
          ezsigntemplatepackageRequest.fkiLanguageID = 2;
          ezsigntemplatepackageRequest.sEzsigntemplatepackageDescription = 'Package for new clients';
          ezsigntemplatepackageRequest.bEzsigntemplatepackageAdminonly = true;
          ezsigntemplatepackageRequest.bEzsigntemplatepackageIsactive = true;
        return ezsigntemplatepackageRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEzsigntemplatepackageRequest) {           
            OASEzsigntemplatepackageRequest ezsigntemplatepackageRequest = (OASEzsigntemplatepackageRequest) obj;
            return this.pkiEzsigntemplatepackageID == ezsigntemplatepackageRequest.pkiEzsigntemplatepackageID
                && this.fkiEzsignfoldertypeID == ezsigntemplatepackageRequest.fkiEzsignfoldertypeID
                && this.fkiLanguageID == ezsigntemplatepackageRequest.fkiLanguageID
                && this.sEzsigntemplatepackageDescription == ezsigntemplatepackageRequest.sEzsigntemplatepackageDescription
                && this.bEzsigntemplatepackageAdminonly == ezsigntemplatepackageRequest.bEzsigntemplatepackageAdminonly
                && this.bEzsigntemplatepackageIsactive == ezsigntemplatepackageRequest.bEzsigntemplatepackageIsactive;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiEzsigntemplatepackageID == null ? 0 : System.hashCode(pkiEzsigntemplatepackageID));
        hashCode = (17 * hashCode) + (fkiEzsignfoldertypeID == null ? 0 : System.hashCode(fkiEzsignfoldertypeID));
        hashCode = (17 * hashCode) + (fkiLanguageID == null ? 0 : System.hashCode(fkiLanguageID));
        hashCode = (17 * hashCode) + (sEzsigntemplatepackageDescription == null ? 0 : System.hashCode(sEzsigntemplatepackageDescription));
        hashCode = (17 * hashCode) + (bEzsigntemplatepackageAdminonly == null ? 0 : System.hashCode(bEzsigntemplatepackageAdminonly));
        hashCode = (17 * hashCode) + (bEzsigntemplatepackageIsactive == null ? 0 : System.hashCode(bEzsigntemplatepackageIsactive));
        return hashCode;
    }
}

