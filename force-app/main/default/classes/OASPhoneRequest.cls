/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.48
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Phone Object
 */
public class OASPhoneRequest {
    /**
     * The unique ID of the Phonetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Mobile|\n|4|Fax|\n|5|Pager|\n|6|Toll Free|
     * @return fkiPhonetypeID
     */
    public Integer fkiPhonetypeID { get; set; }

    /**
     * Get ePhoneType
     * @return ePhoneType
     */
    public OASFieldEPhoneType ePhoneType { get; set; }

    /**
     * The region of the phone number. (For a North America Number only)\n\nThe region is the "514" section in this sample phone number: (514) 990-1516 x123
     * @return sPhoneRegion
     */
    public String sPhoneRegion { get; set; }

    /**
     * The exchange of the phone number. (For a North America Number only)\n\nThe exchange is the "990" section in this sample phone number: (514) 990-1516 x123
     * @return sPhoneExchange
     */
    public String sPhoneExchange { get; set; }

    /**
     * The number of the phone number. (For a North America Number only)\n\nThe number is the "1516" section in this sample phone number: (514) 990-1516 x123
     * @return sPhoneNumber
     */
    public String sPhoneNumber { get; set; }

    /**
     * The international phone number. (For phone numbers outside of North)\n\nDo not specify the "011" part of the phone number used to dial an international phone number from North America.\n\nFor example for this sample phone number "+442071838750", you would send "442071838750" without the "+" sign.
     * @return sPhoneInternational
     */
    public String sPhoneInternational { get; set; }

    /**
     * The extension of the phone number.\n\nThe extension is the "123" section in this sample phone number: (514) 990-1516 x123.\n\nIt can also be used with international phone numbers
     * @return sPhoneExtension
     */
    public String sPhoneExtension { get; set; }

    public static OASPhoneRequest getExample() {
        OASPhoneRequest phoneRequest = new OASPhoneRequest();
          phoneRequest.fkiPhonetypeID = 1;
          phoneRequest.ePhoneType = OASFieldEPhoneType.getExample();
          phoneRequest.sPhoneRegion = '514';
          phoneRequest.sPhoneExchange = '990';
          phoneRequest.sPhoneNumber = '1516';
          phoneRequest.sPhoneInternational = '442071838750';
          phoneRequest.sPhoneExtension = '123';
        return phoneRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPhoneRequest) {           
            OASPhoneRequest phoneRequest = (OASPhoneRequest) obj;
            return this.fkiPhonetypeID == phoneRequest.fkiPhonetypeID
                && this.ePhoneType == phoneRequest.ePhoneType
                && this.sPhoneRegion == phoneRequest.sPhoneRegion
                && this.sPhoneExchange == phoneRequest.sPhoneExchange
                && this.sPhoneNumber == phoneRequest.sPhoneNumber
                && this.sPhoneInternational == phoneRequest.sPhoneInternational
                && this.sPhoneExtension == phoneRequest.sPhoneExtension;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fkiPhonetypeID == null ? 0 : System.hashCode(fkiPhonetypeID));
        hashCode = (17 * hashCode) + (ePhoneType == null ? 0 : System.hashCode(ePhoneType));
        hashCode = (17 * hashCode) + (sPhoneRegion == null ? 0 : System.hashCode(sPhoneRegion));
        hashCode = (17 * hashCode) + (sPhoneExchange == null ? 0 : System.hashCode(sPhoneExchange));
        hashCode = (17 * hashCode) + (sPhoneNumber == null ? 0 : System.hashCode(sPhoneNumber));
        hashCode = (17 * hashCode) + (sPhoneInternational == null ? 0 : System.hashCode(sPhoneInternational));
        hashCode = (17 * hashCode) + (sPhoneExtension == null ? 0 : System.hashCode(sPhoneExtension));
        return hashCode;
    }
}

