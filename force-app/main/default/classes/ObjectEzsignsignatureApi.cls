/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class ObjectEzsignsignatureApi {
    Client client;

    public ObjectEzsignsignatureApi(Client client) {
        this.client = client;
    }

    public ObjectEzsignsignatureApi() {
        this.client = new Client();
    }

    public Client getClient() {
        return this.client;
    }

    /**
     * Create a new Ezsignsignature
     * The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects.
     * @param ezsignsignatureCreateObjectV1Request  (required)
     * @return EzsignsignatureCreateObjectV1Respons
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureCreateObjectV1Respons ezsignsignatureCreateObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsignsignatureCreateObjectV1Request'), 'ezsignsignatureCreateObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureCreateObjectV1Respons) client.invoke(
            'POST', '/1/object/ezsignsignature',
            (List<EzsignsignatureCreateObjectV1Request>) params.get('ezsignsignatureCreateObjectV1Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignsignatureCreateObjectV1Respons.class
        );
    }
    /**
     * Create a new Ezsignsignature
     * The endpoint allows to create one or many elements at once.
     * @param ezsignsignatureCreateObjectV2Request  (required)
     * @return EzsignsignatureCreateObjectV2Respons
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureCreateObjectV2Respons ezsignsignatureCreateObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('ezsignsignatureCreateObjectV2Request'), 'ezsignsignatureCreateObjectV2Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureCreateObjectV2Respons) client.invoke(
            'POST', '/2/object/ezsignsignature',
            (EzsignsignatureCreateObjectV2Request) params.get('ezsignsignatureCreateObjectV2Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignsignatureCreateObjectV2Respons.class
        );
    }
    /**
     * Delete an existing Ezsignsignature
     * 
     * @param pkiEzsignsignatureID  (required)
     * @return EzsignsignatureDeleteObjectV1Respons
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureDeleteObjectV1Respons ezsignsignatureDeleteObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignsignatureID'), 'pkiEzsignsignatureID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureDeleteObjectV1Respons) client.invoke(
            'DELETE', '/1/object/ezsignsignature/{pkiEzsignsignatureID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignsignatureID' => (Integer) params.get('pkiEzsignsignatureID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignsignatureDeleteObjectV1Respons.class
        );
    }
    /**
     * Edit an existing Ezsignsignature
     * 
     * @param pkiEzsignsignatureID  (required)
     * @param ezsignsignatureEditObjectV1Request  (required)
     * @return EzsignsignatureEditObjectV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureEditObjectV1Response ezsignsignatureEditObjectV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignsignatureID'), 'pkiEzsignsignatureID');
        client.assertNotNull(params.get('ezsignsignatureEditObjectV1Request'), 'ezsignsignatureEditObjectV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureEditObjectV1Response) client.invoke(
            'PUT', '/1/object/ezsignsignature/{pkiEzsignsignatureID}',
            (EzsignsignatureEditObjectV1Request) params.get('ezsignsignatureEditObjectV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignsignatureID' => (Integer) params.get('pkiEzsignsignatureID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignsignatureEditObjectV1Response.class
        );
    }
    /**
     * Retrieve an existing Ezsignsignature\&#39;s Ezsignsignatureattachments
     * 
     * @param pkiEzsignsignatureID  (required)
     * @return EzsignsignatureGetEzsignsignatureatt
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureGetEzsignsignatureatt ezsignsignatureGetEzsignsignatureattachmentV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignsignatureID'), 'pkiEzsignsignatureID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureGetEzsignsignatureatt) client.invoke(
            'GET', '/1/object/ezsignsignature/{pkiEzsignsignatureID}/getEzsignsignatureattachment', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignsignatureID' => (Integer) params.get('pkiEzsignsignatureID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignsignatureGetEzsignsignatureatt.class
        );
    }
    /**
     * Retrieve all automatic Ezsignsignatures
     * Return all the Ezsignsignatures that can be signed by the current user
     * @return EzsignsignatureGetEzsignsignaturesAu
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureGetEzsignsignaturesAu ezsignsignatureGetEzsignsignaturesAutomaticV1() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureGetEzsignsignaturesAu) client.invoke(
            'GET', '/1/object/ezsignsignature/getEzsignsignaturesAutomatic', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignsignatureGetEzsignsignaturesAu.class
        );
    }
    /**
     * Retrieve an existing Ezsignsignature
     * 
     * @param pkiEzsignsignatureID  (required)
     * @return EzsignsignatureGetObjectV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureGetObjectV2Response ezsignsignatureGetObjectV2(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignsignatureID'), 'pkiEzsignsignatureID');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureGetObjectV2Response) client.invoke(
            'GET', '/2/object/ezsignsignature/{pkiEzsignsignatureID}', '',
            query, form,
            new Map<String, Object>{
                'pkiEzsignsignatureID' => (Integer) params.get('pkiEzsignsignatureID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'Authorization' },
            EzsignsignatureGetObjectV2Response.class
        );
    }
    /**
     * Sign the Ezsignsignature
     * 
     * @param pkiEzsignsignatureID  (required)
     * @param ezsignsignatureSignV1Request  (required)
     * @return EzsignsignatureSignV1Response
     * @throws OAS.ApiException if fails to make API call
     */
    public EzsignsignatureSignV1Response ezsignsignatureSignV1(Map<String, Object> params) {
        client.assertNotNull(params.get('pkiEzsignsignatureID'), 'pkiEzsignsignatureID');
        client.assertNotNull(params.get('ezsignsignatureSignV1Request'), 'ezsignsignatureSignV1Request');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (EzsignsignatureSignV1Response) client.invoke(
            'POST', '/1/object/ezsignsignature/{pkiEzsignsignatureID}/sign',
            (EzsignsignatureSignV1Request) params.get('ezsignsignatureSignV1Request'),
            query, form,
            new Map<String, Object>{
                'pkiEzsignsignatureID' => (Integer) params.get('pkiEzsignsignatureID')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Authorization' },
            EzsignsignatureSignV1Response.class
        );
    }
}
