/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A User List Element
 */
public class OASUserListElement {
    /**
     * The unique ID of the User
     * minimum: 0
     * @return pkiUserID
     */
    public Integer pkiUserID { get; set; }

    /**
     * The first name of the user
     * @return sUserFirstname
     */
    public String sUserFirstname { get; set; }

    /**
     * The last name of the user
     * @return sUserLastname
     */
    public String sUserLastname { get; set; }

    /**
     * The login name of the User.
     * @return sUserLoginname
     */
    public String sUserLoginname { get; set; }

    /**
     * Whether the User is active or not
     * @return bUserIsactive
     */
    public Boolean bUserIsactive { get; set; }

    /**
     * Get eUserType
     * @return eUserType
     */
    public OASFieldEUserType eUserType { get; set; }

    /**
     * Get eUserOrigin
     * @return eUserOrigin
     */
    public OASFieldEUserOrigin eUserOrigin { get; set; }

    /**
     * Get eUserEzsignaccess
     * @return eUserEzsignaccess
     */
    public OASFieldEUserEzsignaccess eUserEzsignaccess { get; set; }

    /**
     * The eZsign prepaid expiration date
     * @return dtUserEzsignprepaidexpiration
     */
    public String dtUserEzsignprepaidexpiration { get; set; }

    /**
     * The email address.
     * @return sEmailAddress
     */
    public String sEmailAddress { get; set; }

    public static OASUserListElement getExample() {
        OASUserListElement userListElement = new OASUserListElement();
          userListElement.pkiUserID = 70;
          userListElement.sUserFirstname = 'John';
          userListElement.sUserLastname = 'Doe';
          userListElement.sUserLoginname = 'JohnDoe';
          userListElement.bUserIsactive = true;
          userListElement.eUserType = OASFieldEUserType.getExample();
          userListElement.eUserOrigin = OASFieldEUserOrigin.getExample();
          userListElement.eUserEzsignaccess = OASFieldEUserEzsignaccess.getExample();
          userListElement.dtUserEzsignprepaidexpiration = '2020-12-31';
          userListElement.sEmailAddress = 'email@example.com';
        return userListElement;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUserListElement) {           
            OASUserListElement userListElement = (OASUserListElement) obj;
            return this.pkiUserID == userListElement.pkiUserID
                && this.sUserFirstname == userListElement.sUserFirstname
                && this.sUserLastname == userListElement.sUserLastname
                && this.sUserLoginname == userListElement.sUserLoginname
                && this.bUserIsactive == userListElement.bUserIsactive
                && this.eUserType == userListElement.eUserType
                && this.eUserOrigin == userListElement.eUserOrigin
                && this.eUserEzsignaccess == userListElement.eUserEzsignaccess
                && this.dtUserEzsignprepaidexpiration == userListElement.dtUserEzsignprepaidexpiration
                && this.sEmailAddress == userListElement.sEmailAddress;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiUserID == null ? 0 : System.hashCode(pkiUserID));
        hashCode = (17 * hashCode) + (sUserFirstname == null ? 0 : System.hashCode(sUserFirstname));
        hashCode = (17 * hashCode) + (sUserLastname == null ? 0 : System.hashCode(sUserLastname));
        hashCode = (17 * hashCode) + (sUserLoginname == null ? 0 : System.hashCode(sUserLoginname));
        hashCode = (17 * hashCode) + (bUserIsactive == null ? 0 : System.hashCode(bUserIsactive));
        hashCode = (17 * hashCode) + (eUserType == null ? 0 : System.hashCode(eUserType));
        hashCode = (17 * hashCode) + (eUserOrigin == null ? 0 : System.hashCode(eUserOrigin));
        hashCode = (17 * hashCode) + (eUserEzsignaccess == null ? 0 : System.hashCode(eUserEzsignaccess));
        hashCode = (17 * hashCode) + (dtUserEzsignprepaidexpiration == null ? 0 : System.hashCode(dtUserEzsignprepaidexpiration));
        hashCode = (17 * hashCode) + (sEmailAddress == null ? 0 : System.hashCode(sEmailAddress));
        return hashCode;
    }
}

