/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A Permission Object and children to create a complete structure
 */
public class OASPermissionResponseCompound implements OASPermissionResponse {
    /**
     * The unique ID of the Permission
     * minimum: 0
     * maximum: 65535
     * @return pkiPermissionID
     */
    public Integer pkiPermissionID { get; set; }

    /**
     * The unique ID of the User
     * minimum: 0
     * @return fkiUserID
     */
    public Integer fkiUserID { get; set; }

    /**
     * The unique ID of the Apikey
     * minimum: 0
     * @return fkiApikeyID
     */
    public Integer fkiApikeyID { get; set; }

    /**
     * The unique ID of the Usergroup
     * minimum: 0
     * maximum: 255
     * @return fkiUsergroupID
     */
    public Integer fkiUsergroupID { get; set; }

    /**
     * The unique ID of the Company
     * minimum: 1
     * maximum: 255
     * @return fkiCompanyID
     */
    public Integer fkiCompanyID { get; set; }

    /**
     * The unique ID of the Modulesection
     * minimum: 0
     * @return fkiModulesectionID
     */
    public Integer fkiModulesectionID { get; set; }

    /**
     * The Name of the Company in the language of the requester
     * @return sCompanyNameX
     */
    public String sCompanyNameX { get; set; }

    public static OASPermissionResponseCompound getExample() {
        OASPermissionResponseCompound permissionResponseCompound = new OASPermissionResponseCompound();
          permissionResponseCompound.pkiPermissionID = 31;
          permissionResponseCompound.fkiUserID = 70;
          permissionResponseCompound.fkiApikeyID = 99;
          permissionResponseCompound.fkiUsergroupID = 2;
          permissionResponseCompound.fkiCompanyID = 1;
          permissionResponseCompound.fkiModulesectionID = 53;
          permissionResponseCompound.sCompanyNameX = 'Acme inc.';
        return permissionResponseCompound;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPermissionResponseCompound) {           
            OASPermissionResponseCompound permissionResponseCompound = (OASPermissionResponseCompound) obj;
            return this.pkiPermissionID == permissionResponseCompound.pkiPermissionID
                && this.fkiUserID == permissionResponseCompound.fkiUserID
                && this.fkiApikeyID == permissionResponseCompound.fkiApikeyID
                && this.fkiUsergroupID == permissionResponseCompound.fkiUsergroupID
                && this.fkiCompanyID == permissionResponseCompound.fkiCompanyID
                && this.fkiModulesectionID == permissionResponseCompound.fkiModulesectionID
                && this.sCompanyNameX == permissionResponseCompound.sCompanyNameX;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pkiPermissionID == null ? 0 : System.hashCode(pkiPermissionID));
        hashCode = (17 * hashCode) + (fkiUserID == null ? 0 : System.hashCode(fkiUserID));
        hashCode = (17 * hashCode) + (fkiApikeyID == null ? 0 : System.hashCode(fkiApikeyID));
        hashCode = (17 * hashCode) + (fkiUsergroupID == null ? 0 : System.hashCode(fkiUsergroupID));
        hashCode = (17 * hashCode) + (fkiCompanyID == null ? 0 : System.hashCode(fkiCompanyID));
        hashCode = (17 * hashCode) + (fkiModulesectionID == null ? 0 : System.hashCode(fkiModulesectionID));
        hashCode = (17 * hashCode) + (sCompanyNameX == null ? 0 : System.hashCode(sCompanyNameX));
        return hashCode;
    }
}

